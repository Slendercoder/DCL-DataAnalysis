index <- which(regions == i) # WARNING: REGIONS COLLAPSED!
if (index != 1) {
iV <- regionsCoded[index - 1]
#    print("iV")
#    print(iV)
iV <- code2Vector(iV)
kVector <- lapply(regions[2:9], function(k) {
index <- which(regions == k)
kCoded <- regionsCoded[index - 1] # regionsCoded does not have 'RS'
kV <- code2Vector(kCoded)
})
similarities <- lapply(kVector, function(x) {
simil(iV, x, epsilon)
})
similarities <- as.numeric(unlist(similarities))
similarities <- c(0, similarities)
attractiveness <- attractiveness + zeta * similarities
}
#  print('attractiveness final')
#  print(attractiveness)
#  negative <- which(attractiveness < 0)
#  if (length(negative) > 0) {
#    print('Error: attractiveness negative')
#    print(attractiveness)
#    for (k in negative) {
#      attractiveness[k] <- 0.00001
#    }
#  }
probs <- attractiveness / sum(attractiveness)
return(probs)
}
p <- FRAWSpred(i,s, j, 0.05, 150, 500, 0.98, 0, 0, 0, 0, regions)
p
i <- 'LEFT'
s <- 32
j <- 'rBCHIJQRS'
p <- FRAWSpred(i,s, j, 0.05, 150, 500, 0.98, 0, 0, 0, 0, regions)
p
j <- 'LEFT'
p <- FRAWSpred(i,s, j, 0.05, 150, 500, 0.98, 0, 0, 0, 0, regions)
p
source("FRAWSpred.R")
theta <- c(0.05, 150, 500, 0.98, 0, 0, 0, 0)
FRAWSutil(theta, args, regions) # 3011
# To search for best parameters WSLS model
w1 <- 0.05 # bias FOCAL
w2 <- 150 # win stay
fitresWSLS <- nmkb(par=c(w1, w2),
fn = function(theta) FRAWSutil(c(theta, 500, 0.98, 0, 0, 0, 0), args, regions),
lower=c(w1 - 0.05,
w2 - 10),
upper=c(w1 + 0.05,
w2 + 10),
control=list(trace=0))
install.packages("beepr")
beep()
library(beepr)
beep()
print(fitresWSLS$par)
print(fitresWSLS$value)
# To search for best parameters WSLS model
w1 <- 0.03 # bias FOCAL
w2 <- 130 # win stay
theta <- c(0.05, 150, 500, 0.98, 0, 0, 0, 0)
FRAWSutil(theta, args, regions) # 4278
# To search for best parameters FRA model
w1 <- 0.00001 # bias FOCAL
w2 <- 140 # win stay
w3 <- 3 # attraction similarity to complement
w4 <- 5 # stubborness
w5 <- 1 # eta
fitresFRA <- nmkb(par=c(w1, w2, w3, w4, w5),
fn = function(theta) FRAWSutil(c(theta[1],
theta[2],
500,
0.98,
theta[3],
0.3,
theta[4],
theta[5]),
args, regions),
lower=c(0,
w2 - 10,
w3 - 2,
w4 - 5,
w5 - 0.04),
upper=c(w1 + 0.02,
w2 + 10,
w3 + 2,
w4 + 5,
w5 + 0.04),
control=list(trace=0))
beep()
print(fitresFRA$par)
print(fitresFRA$value)
# To search for best parameters WSLS model
w1 <- 0.03 # bias FOCAL
w2 <- 10 # win stay
fitresWSLS <- nmkb(par=c(w1, w2),
fn = function(theta) FRAWSutil(c(theta, 500, 0.98, 0, 0, 0, 0), args, regions),
lower=c(0,
w2 - 10),
upper=c(w1 + 0.05,
w2 + 10),
control=list(trace=0))
beep()
print(fitresWSLS$par)
print(fitresWSLS$value)
theta <- c(0.035, 7.5, 500, 0.98, 0, 0, 0, 0)
FRAWSutil(theta, args, regions) # 4278
get_legend<-function(myggplot){
tmp <- ggplot_gtable(ggplot_build(myggplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)
}
###############################################
# Eta = 1.5
###############################################
df1 = read.csv("out_Delta1-Eta1.csv")
df1$Exp <- as.character("1")
setwd("~/Desktop/Edgar/DCL-DataAnalysis/Python codes")
###############################################
# Eta = 1.5
###############################################
df1 = read.csv("out_Delta1-Eta1.csv")
df1$Exp <- as.character("1")
# head(df1)
df2 = read.csv("out_Delta5-Eta1.csv")
df2$Exp <- as.character("5")
# head(df2)
df3 = read.csv("out_Delta10-Eta1.csv")
df3$Exp <- as.character("10")
df1 <- df1[complete.cases(df1), ]
df2 <- df2[complete.cases(df2), ]
df3 <- df3[complete.cases(df3), ]
df <- rbind(
df1[c('Round',
'DLIndex',
'Strategy',
'Consistency',
'Norm_Score_LAG1',
'Distancias_LAG1',
'Exp')],
df2[c('Round',
'DLIndex',
'Strategy',
'Consistency',
'Norm_Score_LAG1',
'Distancias_LAG1',
'Exp')],
df3[c('Round',
'DLIndex',
'Strategy',
'Consistency',
'Norm_Score_LAG1',
'Distancias_LAG1',
'Exp')]
)
df$Exp <- as.factor(df$Exp)
df$Exp <- factor(df$Exp, levels = c('1', '5', '10'))
dfc_DLIndex <- summarySE(df, measurevar="DLIndex", groupvars=c("Exp", "Round"))
# Density plot Size_visited
g1 <- ggplot(df, aes(DLIndex, colour=Exp, group=Exp)) +
geom_density(size=1) +
#  scale_colour_manual(values = c("0" = "#999999", "70" = "#E69F00", "150" = "#56B4E9")) +
#  scale_y_continuous(limits = c(0, 3)) +
#  ggtitle(TeX('$\\epsilon{=}0.3$')) +
labs(color = TeX('$\\delta$              ')) +
theme_bw() +
theme(legend.position="bottom")               # Position legend in bottom right
dfDLI <- summarySE(df, measurevar="DLIndex", groupvars=c("Round", "Exp"))
g2 <- ggplot(dfDLI, aes(Round, DLIndex, group=Exp, color=Exp)) +
geom_line() +
xlab("Round (unicorn absent)") +
ylab("Av. DLIndex") +
labs(color = TeX('$\\delta$                        ')) +
ylim(c(0,1)) +
theme_bw() +
theme(legend.position="bottom")               # Position legend in bottom right
g3 <- ggplot(df, aes(log(Distancias_LAG1), Consistency, color=Exp)) +
geom_point(alpha = 1/8) +
xlab("Log of max similarity w.r.t.\nfocal regions on Round n-1") +
ylab("Consistency on Round n") +
scale_color_discrete(name = TeX('$\\zeta$')) +
geom_smooth(method = lm)
g4 <- ggplot(df, aes(Norm_Score_LAG1, Consistency, color=Exp)) +
geom_point(alpha = 1/8) +
xlim(c(0.6,1)) +
ylim(c(0,1)) +
xlab("Norm. score prev. round") +
ylab("Consistency") +
scale_color_discrete(name = TeX('$\\zeta$')) +
geom_smooth(method = lm)
g4 <- g4 + theme_sjplot()
legend <- get_legend(g2)
g1 <- g1 + theme(legend.position="none")
g2 <- g2 + theme(legend.position="none")
g3 <- g3 + theme(legend.position="none")
g4 <- g4 + theme(legend.position="none")
expTex = TeX('$bias$_{focal}=0, $\\alpha{=}150$, $\\beta{=}500$, $\\gamma{=}0.98$, $\\zeta{=}15$, $\\epsilon{=}0.3$')
title1=textGrob(expTex, gp=gpar(fontface="bold"))
g <- grid.arrange(g1, g3, g2, g4, ncol = 2, top=legend, bottom=title1)
expTex = TeX('$bias$_{focal}=0, $\\alpha{=}150$, $\\beta{=}500$, $\\gamma{=}0.98$, $\\zeta{=}1$, $\\epsilon{=}1$')
title1=textGrob(expTex, gp=gpar(fontface="bold"))
g <- grid.arrange(g1, g3, g2, g4, ncol = 2, top=legend, bottom=title1)
###############################################
# Eta = 1.5
###############################################
df1 = read.csv("out_Delta1-Eta0.5.csv")
df1$Exp <- as.character("1")
# head(df1)
df2 = read.csv("out_Delta5-Eta0.5.csv")
df2$Exp <- as.character("5")
# head(df2)
df3 = read.csv("out_Delta10-Eta0.5.csv")
df3$Exp <- as.character("10")
df1 <- df1[complete.cases(df1), ]
df2 <- df2[complete.cases(df2), ]
df3 <- df3[complete.cases(df3), ]
df <- rbind(
df1[c('Round',
'DLIndex',
'Strategy',
'Consistency',
'Norm_Score_LAG1',
'Distancias_LAG1',
'Exp')],
df2[c('Round',
'DLIndex',
'Strategy',
'Consistency',
'Norm_Score_LAG1',
'Distancias_LAG1',
'Exp')],
df3[c('Round',
'DLIndex',
'Strategy',
'Consistency',
'Norm_Score_LAG1',
'Distancias_LAG1',
'Exp')]
)
df$Exp <- as.factor(df$Exp)
df$Exp <- factor(df$Exp, levels = c('1', '5', '10'))
dfc_DLIndex <- summarySE(df, measurevar="DLIndex", groupvars=c("Exp", "Round"))
# Density plot Size_visited
g1 <- ggplot(df, aes(DLIndex, colour=Exp, group=Exp)) +
geom_density(size=1) +
#  scale_colour_manual(values = c("0" = "#999999", "70" = "#E69F00", "150" = "#56B4E9")) +
#  scale_y_continuous(limits = c(0, 3)) +
#  ggtitle(TeX('$\\epsilon{=}0.3$')) +
labs(color = TeX('$\\delta$              ')) +
theme_bw() +
theme(legend.position="bottom")               # Position legend in bottom right
dfDLI <- summarySE(df, measurevar="DLIndex", groupvars=c("Round", "Exp"))
g2 <- ggplot(dfDLI, aes(Round, DLIndex, group=Exp, color=Exp)) +
geom_line() +
xlab("Round (unicorn absent)") +
ylab("Av. DLIndex") +
labs(color = TeX('$\\delta$                        ')) +
ylim(c(0,1)) +
theme_bw() +
theme(legend.position="bottom")               # Position legend in bottom right
g3 <- ggplot(df, aes(log(Distancias_LAG1), Consistency, color=Exp)) +
geom_point(alpha = 1/8) +
xlab("Log of max similarity w.r.t.\nfocal regions on Round n-1") +
ylab("Consistency on Round n") +
scale_color_discrete(name = TeX('$\\zeta$')) +
geom_smooth(method = lm)
g4 <- ggplot(df, aes(Norm_Score_LAG1, Consistency, color=Exp)) +
geom_point(alpha = 1/8) +
xlim(c(0.6,1)) +
ylim(c(0,1)) +
xlab("Norm. score prev. round") +
ylab("Consistency") +
scale_color_discrete(name = TeX('$\\zeta$')) +
geom_smooth(method = lm)
g4 <- g4 + theme_sjplot()
legend <- get_legend(g2)
g1 <- g1 + theme(legend.position="none")
g2 <- g2 + theme(legend.position="none")
g3 <- g3 + theme(legend.position="none")
g4 <- g4 + theme(legend.position="none")
expTex = TeX('$bias$_{focal}=0, $\\alpha{=}150$, $\\beta{=}500$, $\\gamma{=}0.98$, $\\zeta{=}1$, $\\epsilon{=}1$')
title1=textGrob(expTex, gp=gpar(fontface="bold"))
g <- grid.arrange(g1, g3, g2, g4, ncol = 2, top=legend, bottom=title1)
model3h <- lm(DLIndex ~ Consistency + Dif_consist*Joint_LAG1, data = df3)
g2 <- plot_model(model3h,
type = "pred",
terms = c("Dif_consist", "Joint_LAG1"),
colors = c("black", "red", "blue"),
title = "",
legend.title = "Overlap",
axis.title = c("Absolute difference\nin consistency", "DLindex"))
library(ggplot2)
library(gridExtra)
library(grid)
library(Rmisc)
library(latex2exp)
library(RColorBrewer)
display.brewer.all(colorblindFriendly = TRUE)
get_legend<-function(myggplot){
tmp <- ggplot_gtable(ggplot_build(myggplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)
}
###############################################
# Eta = 1.5
###############################################
df1 = read.csv("out_Delta1-Eta0.5.csv")
df1$Exp <- as.character("1")
# head(df1)
df2 = read.csv("out_Delta5-Eta0.5.csv")
df2$Exp <- as.character("5")
# head(df2)
df3 = read.csv("out_Delta10-Eta0.5.csv")
df3$Exp <- as.character("10")
df1 <- df1[complete.cases(df1), ]
df2 <- df2[complete.cases(df2), ]
df3 <- df3[complete.cases(df3), ]
df <- rbind(
df1[c('Round',
'DLIndex',
'Strategy',
'Consistency',
'Norm_Score_LAG1',
'Distancias_LAG1',
'Exp')],
df2[c('Round',
'DLIndex',
'Strategy',
'Consistency',
'Norm_Score_LAG1',
'Distancias_LAG1',
'Exp')],
df3[c('Round',
'DLIndex',
'Strategy',
'Consistency',
'Norm_Score_LAG1',
'Distancias_LAG1',
'Exp')]
)
df$Exp <- as.factor(df$Exp)
df$Exp <- factor(df$Exp, levels = c('1', '5', '10'))
dfc_DLIndex <- summarySE(df, measurevar="DLIndex", groupvars=c("Exp", "Round"))
# Density plot Size_visited
g1 <- ggplot(df, aes(DLIndex, colour=Exp, group=Exp)) +
geom_density(size=1) +
#  scale_colour_manual(values = c("0" = "#999999", "70" = "#E69F00", "150" = "#56B4E9")) +
#  scale_y_continuous(limits = c(0, 3)) +
#  ggtitle(TeX('$\\epsilon{=}0.3$')) +
labs(color = TeX('$\\delta$              ')) +
theme_bw() +
theme(legend.position="bottom")               # Position legend in bottom right
dfDLI <- summarySE(df, measurevar="DLIndex", groupvars=c("Round", "Exp"))
g2 <- ggplot(dfDLI, aes(Round, DLIndex, group=Exp, color=Exp)) +
geom_line() +
xlab("Round (unicorn absent)") +
ylab("Av. DLIndex") +
labs(color = TeX('$\\delta$                        ')) +
ylim(c(0,1)) +
theme_bw() +
theme(legend.position="bottom")               # Position legend in bottom right
g3 <- ggplot(df, aes(log(Distancias_LAG1), Consistency, color=Exp)) +
geom_point(alpha = 1/8) +
xlab("Log of max similarity w.r.t.\nfocal regions on Round n-1") +
ylab("Consistency on Round n") +
scale_color_discrete(name = TeX('$\\zeta$')) +
geom_smooth(method = lm)
g4 <- ggplot(df, aes(Norm_Score_LAG1, Consistency, color=Exp)) +
geom_point(alpha = 1/8) +
xlim(c(0.6,1)) +
ylim(c(0,1)) +
xlab("Norm. score prev. round") +
ylab("Consistency") +
scale_color_discrete(name = TeX('$\\zeta$')) +
geom_smooth(method = lm)
g4 <- g4 + theme_sjplot()
legend <- get_legend(g2)
g1 <- g1 + theme(legend.position="none")
g2 <- g2 + theme(legend.position="none")
g3 <- g3 + theme(legend.position="none")
g4 <- g4 + theme(legend.position="none")
expTex = TeX('$bias$_{focal}=0, $\\alpha{=}150$, $\\beta{=}500$, $\\gamma{=}0.98$, $\\zeta{=}1$, $\\epsilon{=}1$')
title1=textGrob(expTex, gp=gpar(fontface="bold"))
g <- grid.arrange(g1, g3, g2, g4, ncol = 2, top=legend, bottom=title1)
model3h <- lm(DLIndex ~ Consistency + Dif_consist*Joint_LAG1, data = df3)
g2 <- plot_model(model3h,
type = "pred",
terms = c("Dif_consist", "Joint_LAG1"),
colors = c("black", "red", "blue"),
title = "",
legend.title = "Overlap",
axis.title = c("Absolute difference\nin consistency", "DLindex"))
model3h <- lm(DLIndex ~ Consistency + Dif_consist*Joint_LAG1, data = df3)
g2 <- plot_model(model3h,
type = "pred",
terms = c("Dif_consist", "Joint_LAG1"),
colors = c("black", "red", "blue"),
title = "",
legend.title = "Overlap",
axis.title = c("Absolute difference\nin consistency", "DLindex"))
library(sjmisc)
install.packages("sjmisc")
model3h <- lm(DLIndex ~ Consistency + Dif_consist*Joint_LAG1, data = df3)
g2 <- plot_model(model3h,
type = "pred",
terms = c("Dif_consist", "Joint_LAG1"),
colors = c("black", "red", "blue"),
title = "",
legend.title = "Overlap",
axis.title = c("Absolute difference\nin consistency", "DLindex"))
library(sjmisc)
library(sjmisc)
install.packages("sjmisc")
library(sjmisc)
library(grid)
library(Rmisc)
library(latex2exp)
library(RColorBrewer)
display.brewer.all(colorblindFriendly = TRUE)
library(sjmisc)
#display.brewer.all(colorblindFriendly = TRUE)
library(sjmisc)
install.packages("sjmisc")
library(ggplot2)
library(gridExtra)
library(grid)
library(Rmisc)
library(latex2exp)
library(RColorBrewer)
#display.brewer.all(colorblindFriendly = TRUE)
library(sjmisc)
install.packages("sjmisc")
#display.brewer.all(colorblindFriendly = TRUE)
library(sjmisc)
nget_legend<-function(myggplot){
tmp <- ggplot_gtable(ggplot_build(myggplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)
}
###############################################
# Eta = 1.5
###############################################
df1 = read.csv("out_Delta1-Eta0.5.csv")
df1$Exp <- as.character("1")
# head(df1)
df2 = read.csv("out_Delta5-Eta0.5.csv")
###############################################
# Eta = 1
###############################################
df1 = read.csv("out_Delta1-Eta1.csv")
df1$Exp <- as.character("1")
# head(df1)
df2 = read.csv("out_Delta5-Eta1.csv")
df2$Exp <- as.character("5")
# head(df2)
df3 = read.csv("out_Delta10-Eta1.csv")
df3$Exp <- as.character("10")
df1 <- df1[complete.cases(df1), ]
df2 <- df2[complete.cases(df2), ]
df3 <- df3[complete.cases(df3), ]
df <- rbind(
df1[c('Round',
'DLIndex',
'Strategy',
'Consistency',
'Norm_Score_LAG1',
'Distancias_LAG1',
'Exp')],
df2[c('Round',
'DLIndex',
'Strategy',
'Consistency',
'Norm_Score_LAG1',
'Distancias_LAG1',
'Exp')],
df3[c('Round',
'DLIndex',
'Strategy',
'Consistency',
'Norm_Score_LAG1',
'Distancias_LAG1',
'Exp')]
)
df$Exp <- as.factor(df$Exp)
df$Exp <- factor(df$Exp, levels = c('1', '5', '10'))
dfc_DLIndex <- summarySE(df, measurevar="DLIndex", groupvars=c("Exp", "Round"))
# Density plot Size_visited
g1 <- ggplot(df, aes(DLIndex, colour=Exp, group=Exp)) +
geom_density(size=1) +
#  scale_colour_manual(values = c("0" = "#999999", "70" = "#E69F00", "150" = "#56B4E9")) +
#  scale_y_continuous(limits = c(0, 3)) +
#  ggtitle(TeX('$\\epsilon{=}0.3$')) +
labs(color = TeX('$\\delta$              ')) +
theme_bw() +
theme(legend.position="bottom")               # Position legend in bottom right
dfDLI <- summarySE(df, measurevar="DLIndex", groupvars=c("Round", "Exp"))
# Density plot Size_visited
g1 <- ggplot(df, aes(DLIndex, colour=Exp, group=Exp)) +
geom_density(size=1) +
#  scale_colour_manual(values = c("0" = "#999999", "70" = "#E69F00", "150" = "#56B4E9")) +
#  scale_y_continuous(limits = c(0, 3)) +
#  ggtitle(TeX('$\\epsilon{=}0.3$')) +
labs(color = TeX('$\\delta$              ')) +
theme_bw() +
theme(legend.position="bottom")               # Position legend in bottom right
library(ggplot2)
