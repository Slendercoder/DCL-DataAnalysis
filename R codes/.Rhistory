setwd("~/Repositorios/DCL-DataAnalysis/R codes")
source("FRApred.R")
library(beepr)
print("Loading and preparing the data...")
#archivo <- "../Python Codes/Simulations/M5_full.csv"
archivo <- "../Python Codes/Simulations/N1_full.csv"
archivo <- "N1_full.csv"
#archivo <- "output-435-261.csv"
df = read.csv(archivo)
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
print(head(df))
args <- getFreqFRA(df, theta)
args <- get_FRASims_list(args)
print(head(args))
source("FRApred.R")
args <- get_FRASims_list(args)
source("FRApred.R")
args <- get_FRASims_list(args)
print(head(args))
f <- searchBestFit(args, N=5, module="nmkb")
source("FRApred.R")
library(beepr)
print("Loading and preparing the data...")
#archivo <- "N1_full.csv"
archivo <- "output-435-261.csv"
df = read.csv(archivo)
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
print(head(df))
args <- getFreqFRA(df, theta)
args <- get_FRASims_list(args)
print(head(args))
beep()
f <- searchBestFit(args, N=5, module="mle2")
f <- searchBestFit(args, N=5, module="nmkb")
beep()
source("FRApred.R")
#f <- searchBestFit(args, N=5, module="mle2")
f <- searchBestFit(args, N=5, module="nmkb")
source("FRApred.R")
#f <- searchBestFit(args, N=5, module="mle2")
f <- searchBestFit(args, N=5, module="nmkb")
source("FRApred.R")
#f <- searchBestFit(args, N=5, module="mle2")
f <- searchBestFit(args, N=5, module="nmkb")
source("FRApred.R")
library(beepr)
print("Loading and preparing data...")
#archivo <- "N1_full.csv"
archivo <- "output-435-261.csv"
df = read.csv(archivo)
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
print(head(df))
args <- getFreqFRA(df, theta)
args <- get_FRASims_list(args)
print(head(args))
beep()
#f <- searchBestFit(args, N=5, module="mle2")
f <- searchBestFit(args, N=5, module="nmkb")
beep()
source("Model_Plots.R")
df <- get_FRASims(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
min_score <- 0
max_score <- 32
theta <- f$par
f
source("FRApred.R")
#f <- searchBestFit(args, N=5, module="mle2")
f <- searchBestFit(args, N=5, module="nmkb")
theta <- f$par
regs <- c('ALL', 'DOWN', 'IN')
p <- plot_FRA_regs(df, regs)
source("Model_Plots.R")
df <- get_FRASims(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
min_score <- 0
max_score <- 32
theta <- f$par
regs <- c('ALL', 'DOWN', 'IN')
p <- plot_FRA_regs(df, regs)
p
n <- length(regs)
k <- regs[1]
df1 <- getFreq_based_on_FRASim(df, k)
df1
q <- plot_FRASim_k_RS2RS(df1, k)
q
rotulo_x <- paste("FRASim", k, sep="")
rotulo_x
# Plot RS to RS
df_Focal <- df1[df1$Region == 'RS', ]
df_Focal <- df_Focal[df_Focal$RegionGo == 'RS', ]
color_a_usar <- cbPalette[which(regiones == 'RS')]
g1 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, shape=RegionGo, color=RegionGo, group=RegionGo),
df_Focal, color = color_a_usar, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
ggtitle("Staying at RS") +
theme_bw() +
theme(legend.position="none")
g1
color_a_usar
df_Focal
g1 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs),
df_Focal, color = color_a_usar, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
ggtitle("Staying at RS") +
theme_bw() +
theme(legend.position="none")
g1
g1 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs),
df_Focal, color = color_a_usar, alpha = alpha, size=1.5)
g1
g1 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs),
data = df_Focal)#, color = color_a_usar, alpha = alpha, size=1.5)
g1
alpha <- 0.3
g1 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs),
data = df_Focal, color = color_a_usar, alpha = alpha, size=1.5)
g1
source("Model_Plots.R")
df <- get_FRASims(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
min_score <- 0
max_score <- 32
theta <- f$par
regs <- c('ALL', 'DOWN', 'IN')
p <- plot_FRA_regs(df, regs)
regs <- c('LEFT', 'RIGHT')
p <- plot_FRA_regs(df, regs)
max_score <- 2
theta <- f$par
regs <- c('LEFT', 'RIGHT')
p <- plot_FRA_regs(df, regs)
source("Model_Plots.R")
df
View(df)
df = read.csv(archivo)
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
print(head(df))
args <- getFreqFRA(df, theta)
View(args)
View(args)
View(df)
View(df)
View(df)
View(df)
df = read.csv(archivo)
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
View(df)
View(df)
#archivo <- "N1_full.csv"
archivo <- "output-435-261.csv"
df = read.csv(archivo)
View(df)
View(df)
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
View(df)
View(df)
source("FRApred.R")
#archivo <- "N1_full.csv"
archivo <- "output-435-261.csv"
df = read.csv(archivo)
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
print(head(df))
args <- getFreqFRA(df, theta)
args <- get_FRASims_list(args)
print(head(args))
#f <- searchBestFit(args, N=5, module="mle2")
f <- searchBestFit(args, N=5, module="nmkb")
beep()
source("Model_Plots.R")
df <- get_FRASims(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
theta <- f$par
regs <- c('LEFT', 'RIGHT')
p <- plot_FRA_regs(df, regs)
source("Model_Plots.R")
p <- plot_FRA_regs(df, regs)
source("Model_Plots.R")
p <- plot_FRA_regs(df, regs)
source("Model_Plots.R")
p <- plot_FRA_regs(df, regs)
source("Model_Plots.R")
p <- plot_FRA_regs(df, regs)
source("Model_Plots.R")
p <- plot_FRA_regs(df, regs)
source("Model_Plots.R")
p <- plot_FRA_regs(df, regs)
source("Model_Plots.R")
p <- plot_FRA_regs(df, regs)
source("Model_Plots.R")
p <- plot_FRA_regs(df, regs)
source("Model_Plots.R")
p <- plot_FRA_regs(df, regs)
xs <- seq(0,2,length.out=200)
k = 'RS'
fitFocal <- sapply(xs, ModelProb, regionFrom='RS', regionGo=k, k=k, theta=theta)
dfB <- data.frame(xs, fitFocal)
dfB
xs <- seq(0,2,length.out=5)
xs
k = 'RS'
fitFocal <- sapply(xs, ModelProb, regionFrom='RS', regionGo=k, k=k, theta=theta)
dfB <- data.frame(xs, fitFocal)
dfB
xs <- seq(0,1,length.out=3)
k = 'RS'
fitFocal <- sapply(xs, ModelProb, regionFrom='RS', regionGo=k, k=k, theta=theta)
dfB <- data.frame(xs, fitFocal)
dfB
source("Model_Plots.R")
xs <- seq(0,1,length.out=3)
k = 'RS'
fitFocal <- sapply(xs, ModelProb, regionFrom='RS', regionGo=k, k=k, theta=theta)
source("Model_Plots.R")
fitFocal <- sapply(xs, ModelProb, regionFrom='RS', regionGo=k, k=k, theta=theta)
source("Model_Plots.R")
fitFocal <- sapply(xs, ModelProb, regionFrom='RS', regionGo=k, k=k, theta=theta)
source("Model_Plots.R")
fitFocal <- sapply(xs, ModelProb, regionFrom='RS', regionGo=k, k=k, theta=theta)
source("Model_Plots.R")
xs <- seq(0,1,length.out=3)
k = 'RS'
fitFocal <- sapply(xs, ModelProb, regionFrom='RS', regionGo=k, k=k, theta=theta)
dfB <- data.frame(xs, fitFocal)
dfB
p <- plot_FRA_regs(df, regs)
source("Model_Plots.R")
p <- plot_FRA_regs(df, regs)
source("Model_Plots.R")
p <- plot_FRA_regs(df, regs)
r <- paste(regs, sep="-")
r
r <- call(paste, regs, sep="-")
r <- paste(regs, collapse="-")
r
source("Model_Plots.R")
theta <- f$par
regs <- c('LEFT', 'RIGHT')
r <- paste(regs, collapse="-")
p <- plot_FRA_regs(df, regs)
grafico <- paste('PlotFRA', r, sep="")
ggsave(grafico, p, dpi=300)
library(save)
install.packages("save")
source("Model_Plots.R")
savePlot(grafico, p)
grafico <- paste('PlotFRA', r, '.pdf',sep="")
savePlot(grafico, p)
ggsave(grafico, p)
#lista_regs <- as.list(c(), c(), c())
regs <- c('ALL', 'NOTHING')
#regs <- c('LEFT', 'RIGHT')
r <- paste(regs, collapse="-")
p <- plot_FRA_regs(df, regs)
lista_regs <- as.list(c('DOWN', 'UP'), c('LEFT', 'RIGHT'), c('IN', 'OUT'))
for (r in lista_regs) {
r <- paste(regs, collapse="-")
p <- plot_FRA_regs(df, regs)
grafico <- paste('PlotFRA-', r, '.pdf',sep="")
ggsave(grafico, p)
}
lista_regs <- as.list(c('DOWN', 'UP'), c('LEFT', 'RIGHT'), c('IN', 'OUT'))
for (r in lista_regs) {
r <- paste(regs, collapse="-")
p <- plot_FRA_regs(df, regs)
grafico <- paste('PlotFRA-', r, '.pdf',sep="")
ggsave(grafico, p)
}
lista_regs <- as.list(c('DOWN', 'UP'), c('LEFT', 'RIGHT'), c('IN', 'OUT'))
for (regs in lista_regs) {
p <- plot_FRA_regs(df, regs)
r <- paste(regs, collapse="-")
grafico <- paste('PlotFRA-', r, '.pdf',sep="")
ggsave(grafico, p)
}
lista_regs <- as.list(c('DOWN', 'UP'), c('LEFT', 'RIGHT'), c('IN', 'OUT'))
for (regs in lista_regs) {
print(regs)
p <- plot_FRA_regs(df, regs)
r <- paste(regs, collapse="-")
grafico <- paste('PlotFRA-', r, '.pdf',sep="")
ggsave(grafico, p)
}
lista_regs
lista_regs <- list(c('DOWN', 'UP'), c('LEFT', 'RIGHT'), c('IN', 'OUT'))
lista_regs
for (regs in lista_regs) {
print(regs)
p <- plot_FRA_regs(df, regs)
r <- paste(regs, collapse="-")
grafico <- paste('PlotFRA-', r, '.pdf',sep="")
ggsave(grafico, p)
}
regs <- ('OUT')
p <- plot_FRA_regs(df, regs)
regs <- ('OUT')
p <- plot_FRA_regs(df, regs)
source("Model_Plots.R")
regs <- ('OUT')
p <- plot_FRA_regs(df, regs)
regs <- c('OUT')
p <- plot_FRA_regs(df, regs)
source("Model_Plots.R")
regs <- c('OUT')
p <- plot_FRA_regs(df, regs)
source("Model_Plots.R")
regs <- c('OUT')
p <- plot_FRA_regs(df, regs)
source("Model_Plots.R")
p <- plot_FRA_regs(df, regs)
source("Model_Plots.R")
p <- plot_FRA_regs(df, regs)
source("Model_Plots.R")
p <- plot_FRA_regs(df, regs)
source("Model_Plots.R")
p <- plot_FRA_regs(df, regs)
source("Model_Plots.R")
p <- plot_FRA_regs(df, regs)
source("Model_Plots.R")
p <- plot_FRA_regs(df, regs)
source("Model_Plots.R")
p <- plot_FRA_regs(df, regs)
source("Model_Plots.R")
p <- plot_FRA_regs(df, regs)
source("Model_Plots.R")
p <- plot_FRA_regs(df, regs)
source("Model_Plots.R")
p <- plot_FRA_regs(df, regs)
source("Model_Plots.R")
regs <- c('OUT')
p <- plot_FRA_regs(df, regs)
source("Model_Plots.R")
lista_regs <- list(c('DOWN', 'UP'), c('LEFT', 'RIGHT'), c('IN', 'OUT'))
for (regs in lista_regs) {
print(regs)
p <- plot_FRA_regs(df, regs)
r <- paste(regs, collapse="-")
grafico <- paste('PlotFRA-', r, '.pdf',sep="")
ggsave(grafico, p)
}
source("Model_Plots.R")
lista_regs <- list(c('DOWN', 'UP'), c('LEFT', 'RIGHT'), c('IN', 'OUT'))
for (regs in lista_regs) {
print(regs)
p <- plot_FRA_regs(df, regs)
r <- paste(regs, collapse="-")
grafico <- paste('PlotFRA-', r, '.pdf',sep="")
ggsave(grafico, p)
}
