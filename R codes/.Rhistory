setwd("~/Repositorios/DCL-DataAnalysis/R codes")
###############################################
# Plot FRA model
archivo <- "../Python Codes/FRA.csv"
df = read.csv(archivo)
p <- plot_behavior(df)
source("Model_Plots.R")
df = read.csv(archivo)
p <- plot_behavior(df)
archivo <- "humans_only_absent.csv"
df = read.csv(archivo)
df$Region <- df$Category
###############################################
# Plot humans qualitative behavior
p <- plot_behavior(df)
###############################################
# Plot FRA model
archivo <- "../Python Codes/FRA.csv"
df = read.csv(archivo)
View(df)
View(df)
model3h <- lm(DLIndex ~ Consistency + Dif_consist*Joint_LAG1, data = df)
model3h
summary(model3h)
###############################################
# Plot FRA model
archivo <- "../Python Codes/FRA.csv"
df = read.csv(archivo)
p <- plot_behavior(df)
View(df)
View(df)
p5 <- ggplot(df, aes(Size_visited)) +
geom_density(size=1) +
#  scale_y_continuous(limits = c(0, 5)) +
xlab("Division of labor") +
theme_bw()
p5
p <- ggplot(df, aes(Size_visited)) +
geom_density(size=1) +
#  scale_y_continuous(limits = c(0, 5)) +
xlab("Number of tiles uncovered") +
theme_bw()
p
archivo <- "humans_only_absent.csv"
df = read.csv(archivo)
df$Region <- df$Category
p <- ggplot(df, aes(Size_visited)) +
geom_density(size=1) +
#  scale_y_continuous(limits = c(0, 5)) +
xlab("Number of tiles uncovered") +
theme_bw()
p
###############################################
archivo <- "humans_only_absent.csv"
df = read.csv(archivo)
df$Region <- df$Category
p1 <- ggplot(df, aes(Size_visited)) +
geom_density(size=1) +
#  scale_y_continuous(limits = c(0, 5)) +
xlab("Number of tiles uncovered") +
theme_bw()
archivo <- "../Python Codes/FRA.csv"
df1 = read.csv(archivo)
p2 <- ggplot(df1, aes(Size_visited)) +
geom_density(size=1) +
#  scale_y_continuous(limits = c(0, 5)) +
xlab("Number of tiles uncovered") +
theme_bw()
grid.arrange(p1, p2, nrow=1)
p2 <- ggplot(df1, aes(Size_visited)) +
geom_density(size=1) +
#  scale_y_continuous(limits = c(0, 5)) +
title("ddd") +
xlab("Number of tiles uncovered") +
theme_bw()
p2 <- ggplot(df1, aes(Size_visited)) +
geom_density(size=1) +
#  scale_y_continuous(limits = c(0, 5)) +
gtitle("ddd") +
xlab("Number of tiles uncovered") +
theme_bw()
p2 <- ggplot(df1, aes(Size_visited)) +
geom_density(size=1) +
#  scale_y_continuous(limits = c(0, 5)) +
ggtitle("Model") +
xlab("Number of tiles uncovered") +
theme_bw()
grid.arrange(p1, p2, nrow=1)
p1 <- ggplot(df, aes(Size_visited)) +
geom_density(size=1) +
#  scale_y_continuous(limits = c(0, 5)) +
ggtitle("Humans") +
xlab("Number of tiles uncovered") +
theme_bw()
archivo <- "../Python Codes/FRA.csv"
df1 = read.csv(archivo)
p2 <- ggplot(df1, aes(Size_visited)) +
geom_density(size=1) +
#  scale_y_continuous(limits = c(0, 5)) +
ggtitle("Model") +
xlab("Number of tiles uncovered") +
theme_bw()
grid.arrange(p1, p2, nrow=1)
###############################################
# Plot FRA model
archivo <- "../Python Codes/FRA.csv"
df = read.csv(archivo)
p <- plot_behavior(df)
###############################################
# Plot FRA model
archivo <- "../Python Codes/FRA.csv"
df = read.csv(archivo)
p <- plot_behavior(df)
###############################################
archivo <- "humans_only_absent.csv"
df = read.csv(archivo)
df$Region <- df$Category
p1 <- ggplot(df, aes(Size_visited)) +
geom_density(size=1) +
#  scale_y_continuous(limits = c(0, 5)) +
ggtitle("Humans") +
xlab("Number of tiles uncovered") +
theme_bw()
archivo <- "../Python Codes/FRA.csv"
archivo <- "../Python Codes/FRA.csv"
archivo <- "../Python Codes/FRA.csv"
df1 = read.csv(archivo)
p1 <- ggplot(df, aes(Size_visited)) +
geom_density(size=1) +
#  scale_y_continuous(limits = c(0, 5)) +
ggtitle("Humans") +
xlab("Number of tiles uncovered") +
theme_bw()
p2 <- ggplot(df1, aes(Size_visited)) +
geom_density(size=1) +
#  scale_y_continuous(limits = c(0, 5)) +
ggtitle("Model") +
xlab("Number of tiles uncovered") +
theme_bw()
grid.arrange(p1, p2, nrow=1)
###############################################
# Plot FRA model
archivo <- "../Python Codes/FRA.csv"
df = read.csv(archivo)
p <- plot_behavior(df)
###############################################
# Plot FRA model
archivo <- "../Python Codes/FRA.csv"
df = read.csv(archivo)
p <- plot_behavior(df)
###############################################
archivo <- "humans_only_absent.csv"
df = read.csv(archivo)
df$Region <- df$Category
archivo <- "../Python Codes/FRA.csv"
df1 = read.csv(archivo)
p1 <- ggplot(df, aes(Size_visited)) +
geom_density(size=1) +
#  scale_y_continuous(limits = c(0, 5)) +
ggtitle("Humans") +
xlab("Number of tiles uncovered") +
theme_bw()
p2 <- ggplot(df1, aes(Size_visited)) +
geom_density(size=1) +
#  scale_y_continuous(limits = c(0, 5)) +
ggtitle("Model") +
xlab("Number of tiles uncovered") +
theme_bw()
grid.arrange(p1, p2, nrow=1)
archivo <- "humans_only_absent.csv"
df = read.csv(archivo)
df$Region <- df$Category
archivo <- "../Python Codes/FRA.csv"
df1 = read.csv(archivo)
p1 <- ggplot(df, aes(Size_visited)) +
geom_density(size=1) +
#  scale_y_continuous(limits = c(0, 5)) +
ggtitle("Humans") +
xlab("Number of tiles uncovered") +
theme_bw()
p2 <- ggplot(df1, aes(Size_visited)) +
geom_density(size=1) +
#  scale_y_continuous(limits = c(0, 5)) +
ggtitle("Model") +
xlab("Number of tiles uncovered") +
theme_bw()
grid.arrange(p1, p2, nrow=1)
archivo <- "../Python Codes/FRA.csv"
df = read.csv(archivo)
p <- plot_behavior(df)
archivo <- "../Python Codes/FRA.csv"
df = read.csv(archivo)
p <- plot_behavior(df)
rep(0, 9)
archivo <- "../Python Codes/FRA.csv"
df = read.csv(archivo)
p <- plot_behavior(df)
# Start from 0
attractiveness <- rep(0, 9)
similarities <- rep(0, 9)
similarities
similarities <- rep(1, 9) + similarities
similarities
bias <- rep(3, 9)
similarities <- bias * similarities
similarities
similarities <- rep(2, 9) + similarities
bias <- rep(3, 9)
similarities <- bias * similarities
similarities
similarities <- rep(2, 9)
bias <- rep(3, 9)
similarities <- bias * similarities
similarities
source("Model_Plots.R")
source("FRApred.R")
library(beepr)
#archivo <- "../Python Codes/Simulations/M5_full.csv"
#archivo <- "../Python Codes/Simulations/N1_full.csv"
#archivo <- "../Python Codes/Dyads/output-435-261.csv"
#archivo <- "N1_full.csv"
archivo <- "humans.csv"
#archivo <- "output-435-261.csv"
print(paste("Loading and preparing data", archivo, "..."))
df = read.csv(archivo)
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
print(head(df))
args <- getFreqFRA(df, theta)
args <- get_FRASims_list(args)
print(head(args))
beep()
#f <- searchBestFit(args, N=5, module="mle2")
f <- searchBestFit(args, N=5, module="nmkb")
beep()
#f <- searchBestFit(args, N=5, module="mle2")
f <- searchBestFit(args, N=5, module="nmkb")
source("FRApred.R")
#f <- searchBestFit(args, N=5, module="mle2")
f <- searchBestFit(args, N=5, module="nmkb")
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df <- find_joint_region(df)
