setwd("~/Repositorios/DCL-DataAnalysis/R codes")
setwd("~/Repositorios/DCL-DataAnalysis/R codes")
source("Model_Plots.R")
source('MODELpred.R') # Load after Model_Plots
####################################################
# Loading parameters from estimations...
####################################################
archivo <- "../Data/parameter_fit_humans-Y.csv"
print(paste("Loading and preparing data", archivo, "..."))
parametros = read.csv(archivo)
thetaWS <- unlist(parametros[parametros['Model']=='WSLS', ][2:11])
imprimir(thetaWS)
thetaFR <- unlist(parametros[parametros['Model']=='FRA', ][2:11])
imprimir(thetaFR)
df1 <- getRelFreq_Rows(df)
# archivo <- "../Data/new_humans_only_absent.csv"
# archivo <- "../Data/humans_only_absent_perfect.csv"
archivo <- "../Data/humans_only_absent.csv"
# archivo <- "../Data/high_performing_human_dyads.csv"
print(paste("Loading and preparing data", archivo, "..."))
df = read.csv(archivo)
df1 <- getRelFreq_Rows(df)
d2 <- plot_FocalTransitions(df1)
d2 <- plot_ModelTransitions_Focal(thetaWS, d2, "#E69F00")
d2 <- plot_ModelTransitions_Focal(thetaFR, d2, "#56B4E9")
d2
df$Region <- df$Category
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
print(head(df))
args <- getFreqFRA(df, theta)
args <- get_FRASims(args)
head(args)
pA <- plot_Transitions_FRASim_k(args, 'ALL')
pA <- plot_ModelTransition_k_FRA(args, thetaFR, 'ALL')
pN <- plot_Transitions_FRASim_k(args, 'NOTHING')
pN <- plot_ModelTransition_k_FRA(args, thetaFR, 'NOTHING')
pL <- plot_Transitions_FRASim_k(args, 'LEFT')
pL <- plot_ModelTransition_k_FRA(args, thetaFR, 'LEFT')
pR <- plot_Transitions_FRASim_k(args, 'RIGHT')
pR <- plot_ModelTransition_k_FRA(args, thetaFR, 'RIGHT')
pT <- plot_Transitions_FRASim_k(args, 'TOP')
pT <- plot_ModelTransition_k_FRA(args, thetaFR, 'TOP')
pB <- plot_Transitions_FRASim_k(args, 'BOTTOM')
pB <- plot_ModelTransition_k_FRA(args, thetaFR, 'BOTTOM')
pI <- plot_Transitions_FRASim_k(args, 'IN')
pI <- plot_ModelTransition_k_FRA(args, thetaFR, 'IN')
pO <- plot_Transitions_FRASim_k(args, 'OUT')
pO <- plot_ModelTransition_k_FRA(args, thetaFR, 'OUT')
p <- grid.arrange(d2, pA, pN,
pI, pO,
pL, pR, pT, pB)
