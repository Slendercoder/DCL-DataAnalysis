setwd("~/Repositorios/DCL-DataAnalysis/R codes")
source("FRApred.R")
source("Model_Plots.R")
library(beepr)
#archivo <- "../Python Codes/Simulations/M5_full.csv"
#archivo <- "../Python Codes/Simulations/N1_full.csv"
archivo <- "../Python Codes/Dyads/output-435-261.csv"
df = read.csv(archivo)
df <- find_joint_region(df)
#df <- get_FRASims(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
print(head(df))
args <- getFreqFRA(df, theta)
print(head(args))
args <- get_FRASims(args)
args <- get_FRASims(args)
print(head(args))
#archivo <- "../Python Codes/Simulations/M5_full.csv"
#archivo <- "../Python Codes/Simulations/N1_full.csv"
archivo <- "../Python Codes/Dyads/output-435-261.csv"
df = read.csv(archivo)
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
print(head(df))
args <- getFreqFRA(df, theta)
print(head(args))
source("FRApred.R")
args <- get_FRASims_list(args)
print(head(args))
args <- getFreqFRA(df, theta)
args$FRAsims <- get_FRASims_list(args)
args <- getFreqFRA(df, theta)
print(head(args))
print(args)
source("FRApred.R")
print(head(args))
args$FRAsims <- get_FRASims_list(args)
args$FRAsims <- lapply(args, get_FRASims_list)
source("FRApred.R")
args <- getFreqFRA(df, theta)
print(head(args))
args$FRAsims <- get_FRASims_list(args)
source("FRApred.R")
args <- getFreqFRA(df, theta)
args$FRAsims <- get_FRASims_list(args)
source("FRApred.R")
args <- getFreqFRA(df, theta)
print(head(args))
args$FRAsims <- get_FRASims_list(args)
source("FRApred.R")
args <- getFreqFRA(df, theta)
args$FRAsims <- get_FRASims_list(args)
aux <- get_FRASims(args)
aux
aux$FRASims <- mapply(function(x1, x2, x3, x4, x5, x6, x7, x8) c(x1, x2, x3, x4, x5, x6, x7, x8),
aux$FRASimALL,
aux$FRASimNOTHING,
aux$FRASimDOWN,
aux$FRASimUP,
aux$FRASimLEFT,
aux$FRASimRIGHT,
aux$FRASimIN,
aux$FRASimOUT)
aux$FRASims <- mapply(function(x1, x2, x3, x4, x5, x6, x7, x8) list(x1, x2, x3, x4, x5, x6, x7, x8),
aux$FRASimALL,
aux$FRASimNOTHING,
aux$FRASimDOWN,
aux$FRASimUP,
aux$FRASimLEFT,
aux$FRASimRIGHT,
aux$FRASimIN,
aux$FRASimOUT)
aux$FRASims <- mapply(function(x1, x2, x3, x4, x5, x6, x7, x8) {
a <- list(x1, x2, x3, x4, x5, x6, x7, x8)
print(a)
return(a)
},
aux$FRASimALL,
aux$FRASimNOTHING,
aux$FRASimDOWN,
aux$FRASimUP,
aux$FRASimLEFT,
aux$FRASimRIGHT,
aux$FRASimIN,
aux$FRASimOUT)
aux$FRASims <- mapply(function(x1, x2, x3, x4, x5, x6, x7, x8) {
a <- list(x1, x2, x3, x4, x5, x6, x7, x8)
imprimir(a)
return(a)
},
aux$FRASimALL,
aux$FRASimNOTHING,
aux$FRASimDOWN,
aux$FRASimUP,
aux$FRASimLEFT,
aux$FRASimRIGHT,
aux$FRASimIN,
aux$FRASimOUT)
aux$FRASims <- mapply(function(x1, x2, x3, x4, x5, x6, x7, x8) {
a <- list(x1, x2, x3, x4, x5, x6, x7, x8)
imprimir(a)
return(imprimir(a))
},
aux$FRASimALL,
aux$FRASimNOTHING,
aux$FRASimDOWN,
aux$FRASimUP,
aux$FRASimLEFT,
aux$FRASimRIGHT,
aux$FRASimIN,
aux$FRASimOUT)
FRASims <- mapply(function(x1, x2, x3, x4, x5, x6, x7, x8) {
a <- list(x1, x2, x3, x4, x5, x6, x7, x8)
imprimir(a)
return(a)
},
aux$FRASimALL,
aux$FRASimNOTHING,
aux$FRASimDOWN,
aux$FRASimUP,
aux$FRASimLEFT,
aux$FRASimRIGHT,
aux$FRASimIN,
aux$FRASimOUT)
FRAsims
FRASims
FRASims <- mapply(function(x1, x2, x3, x4, x5, x6, x7, x8) {
a <- list(x1, x2, x3, x4, x5, x6, x7, x8)
imprimir(a)
return(imprimir(a))
},
aux$FRASimALL,
aux$FRASimNOTHING,
aux$FRASimDOWN,
aux$FRASimUP,
aux$FRASimLEFT,
aux$FRASimRIGHT,
aux$FRASimIN,
aux$FRASimOUT)
FRASims
FRASims <- mapply(function(x1, x2, x3, x4, x5, x6, x7, x8) {
a <- list(x1, x2, x3, x4, x5, x6, x7, x8)
b <- imprimir(a)
return(b)
},
aux$FRASimALL,
aux$FRASimNOTHING,
aux$FRASimDOWN,
aux$FRASimUP,
aux$FRASimLEFT,
aux$FRASimRIGHT,
aux$FRASimIN,
aux$FRASimOUT)
FRASims
FRASims <- mapply(function(x1, x2, x3, x4, x5, x6, x7, x8) {
a <- c(x1, x2, x3, x4, x5, x6, x7, x8)
b <- imprimir(a)
return(a)
},
aux$FRASimALL,
aux$FRASimNOTHING,
aux$FRASimDOWN,
aux$FRASimUP,
aux$FRASimLEFT,
aux$FRASimRIGHT,
aux$FRASimIN,
aux$FRASimOUT)
FRASims
aux <- aux %>%
dplyr::mutate(FRASims = c(FRASimALL, FRASimNOTHING, FRASimDOWN, FRASimUP, FRASimLEFT, FRASimRIGHT, FRASimIN, FRASimOUT))
aux <- aux %>%
dplyr::mutate(FRASims = as.list(c(FRASimALL, FRASimNOTHING, FRASimDOWN, FRASimUP, FRASimLEFT, FRASimRIGHT, FRASimIN, FRASimOUT)))
aux <- aux %>%
dplyr::mutate(FRASims = paste(FRASimALL, FRASimNOTHING, FRASimDOWN, FRASimUP, FRASimLEFT, FRASimRIGHT, FRASimIN, FRASimOUT))
aux
aux$FRASims
a <- paste(x1, x2, x3, x4, x5, x6, x7, x8)
FRASims <- mapply(function(x1, x2, x3, x4, x5, x6, x7, x8) {
a <- paste(x1, x2, x3, x4, x5, x6, x7, x8)
b <- imprimir(a)
return(a)
},
aux$FRASimALL,
aux$FRASimNOTHING,
aux$FRASimDOWN,
aux$FRASimUP,
aux$FRASimLEFT,
aux$FRASimRIGHT,
aux$FRASimIN,
aux$FRASimOUT)
FRASims <- mapply(function(x1, x2, x3, x4, x5, x6, x7, x8) {
a <- paste(x1, x2, x3, x4, x5, x6, x7, x8)
return(a)
},
aux$FRASimALL,
aux$FRASimNOTHING,
aux$FRASimDOWN,
aux$FRASimUP,
aux$FRASimLEFT,
aux$FRASimRIGHT,
aux$FRASimIN,
aux$FRASimOUT)
FRASims
aux$FRASims
a <- data.frame(c(1, 2))
a
a <- list(data.frame(c(1, 2)))
a
a <- as.list(data.frame(c(1, 2)))
a
aux <- aux %>%
dplyr::mutate(FRASims = as.list(data.frame(c(FRASimALL,
FRASimNOTHING,
FRASimDOWN,
FRASimUP,
FRASimLEFT,
FRASimRIGHT,
FRASimIN,
FRASimOUT)))
)
aux$FRASims
aux$FRASims <- unlist(aux$FRASims)
aux$FRASims <- unlist(aux$FRASims)
aux$FRASims <- unlist(aux$FRASims)
aux$FRASims
aux$freqs <- lapply(aux$FRASims, function(x) {
x1 <- x[1]
x2 <- x[2]
x3 <- x[3]
x4 <- x[4]
x5 <- x[5]
x6 <- x[6]
x7 <- x[7]
x8 <- x[8]
return (c(x1, x2, x3, x4, x5, x6, x7, x8))
})
aux$freqs
aux <- aux %>%
dplyr::mutate(FRASims = as.list(data.frame(c(FRASimALL,
FRASimNOTHING,
FRASimDOWN,
FRASimUP,
FRASimLEFT,
FRASimRIGHT,
FRASimIN,
FRASimOUT)))
)
head(aux$FRASims)
head(aux$freqs)
#archivo <- "../Python Codes/Simulations/M5_full.csv"
#archivo <- "../Python Codes/Simulations/N1_full.csv"
archivo <- "../Python Codes/Dyads/output-435-261.csv"
df = read.csv(archivo)
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
print(head(df))
args <- getFreqFRA(df, theta)
args$FRAsims <- get_FRASims_list(args)
aux <- get_FRASims(args)
aux <- aux %>%
dplyr::mutate(FRASims = as.list(data.frame(c(FRASimALL,
FRASimNOTHING,
FRASimDOWN,
FRASimUP,
FRASimLEFT,
FRASimRIGHT,
FRASimIN,
FRASimOUT)))
)
aux
