d2
# archivo <- "../Data/high_performing_human_dyads.csv"
archivo <- "../Data/humans_only_absent-1.csv"
print(paste("Loading and preparing data", archivo, "..."))
dfB = read.csv(archivo)
df1B <- getRelFreq_Rows(dfB)
d3 <- plot_FocalTransitions(df1B)
d3 <- plot_ModelTransitions_Focal(thetaWS, d2, "#E69F00")
d3 <- plot_ModelTransitions_Focal(thetaFR, d2, "#56B4E9")
d3
grid.arrange(d2, d3, nrow=1)
aux <- df1A[df1A$Score==32, ]
head(df1A)
head(aux)
head(df1B)
aux <- df1B[df1B$Score==32, ]
head(aux)
aux <- df1A[df1A$Score==32, ]
aux <- aux[aux$Region==aux$RegionGo, ]
head(aux)
aux <- df1B[df1B$Score==32, ]
aux <- aux[aux$Region==aux$RegionGo, ]
head(aux)
df1A <- getRelFreq_Rows(dfA)
head(df1A)
aux <- df1A[df1A$Score==32, ]
aux <- aux[aux$Region==aux$RegionGo, ]
head(aux)
d2 <- plot_FocalTransitions(df1A)
d2
source("Model_Plots.R")
source('MODELpred-4deltas.R') # Load after Model_Plots
df1A <- getRelFreq_Rows(dfA)
d2 <- plot_FocalTransitions(df1A)
d2
source("Model_Plots.R")
source('MODELpred-4deltas.R') # Load after Model_Plots
d2 <- plot_FocalTransitions(df1A)
d2
d2 <- plot_ModelTransitions_Focal(thetaWS, d2, "#E69F00")
d2 <- plot_ModelTransitions_Focal(thetaFR, d2, "#56B4E9")
d2
df1B <- getRelFreq_Rows(dfB)
d3 <- plot_FocalTransitions(df1B)
d3 <- plot_ModelTransitions_Focal(thetaWS, d2, "#E69F00")
d3 <- plot_ModelTransitions_Focal(thetaFR, d2, "#56B4E9")
d3
grid.arrange(d2, d3, nrow=1)
source("Model_Plots.R")
source('MODELpred-4deltas.R') # Load after Model_Plots
source("Model_Plots.R")
source('MODELpred-4deltas.R') # Load after Model_Plots
archivo <- "../Data/humans_only_absent.csv"
print(paste("Loading and preparing data", archivo, "..."))
dfA = read.csv(archivo)
####################################################
# Plotting...
####################################################
df1A <- getRelFreq_Rows(dfA)
d2 <- plot_FocalTransitions(df1A)
d2 <- plot_ModelTransitions_Focal(thetaWS, d2, "#E69F00")
d2 <- plot_ModelTransitions_Focal(thetaFR, d2, "#56B4E9")
d2
archivo <- "../Data/humans_only_absent.csv"
print(paste("Loading and preparing data", archivo, "..."))
dfA = read.csv(archivo)
df1A <- getRelFreq_Rows(dfA)
d2 <- plot_FocalTransitions(df1A)
d2
source("Model_Plots.R")
source('MODELpred-4deltas.R') # Load after Model_Plots
df1A <- getRelFreq_Rows(dfA)
d2 <- plot_FocalTransitions(df1A)
d2
source("Model_Plots.R")
source('MODELpred-4deltas.R') # Load after Model_Plots
df1A <- getRelFreq_Rows(dfA)
d2 <- plot_FocalTransitions(df1A)
d2
d4 <- plot_FocalTransitions(aux)
d4
min_score <- 30
max_score <- 33
alpha <- 0.5
gOTHER2OTHER <- ggplot() +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
xlab("Score") +
#  ylab("") +
ylab("Rel. Freq./Probability") +
ggtitle("Re-select focal") +
theme_bw()
gOTHER2OTHER
regiones <- c('ALL', 'NOTHING',
'BOTTOM', 'TOP', 'LEFT', 'RIGHT',
'IN', 'OUT')
df <- aux
df_Focal <- df[df$Region == df$RegionGo, ]
print(head(df_Focal[df_Focal$Score==32, ]))
print(dim(df_Focal))
gOTHER2OTHER <- gOTHER2OTHER +
geom_point(aes(x = Score, y = Freqs), df_Focal, alpha = alpha, size=1.5)
gOTHER2OTHER
gOTHER2OTHER <- ggplot() +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
xlab("Score") +
#  ylab("") +
ylab("Rel. Freq./Probability") +
ggtitle("Re-select focal") +
theme_bw()
print(head(aux[aux$Score==32, ]))
print(dim(aux))
gOTHER2OTHER <- gOTHER2OTHER +
geom_point(aes(x = Score, y = Freqs), aux, alpha = alpha, size=1.5)
gOTHER2OTHER
head(df1A)
aux <- df1A[df1A$Score==32, ]
aux <- aux[aux$Region==aux$RegionGo, ]
head(aux)
min_score <- 30
max_score <- 33
alpha <- 0.5
gOTHER2OTHER <- ggplot() +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
xlab("Score") +
#  ylab("") +
ylab("Rel. Freq./Probability") +
ggtitle("Re-select focal") +
theme_bw()
gOTHER2OTHER <- gOTHER2OTHER +
geom_point(aes(x = Score, y = Freqs), aux, alpha = alpha, size=1.5)
gOTHER2OTHER
gOTHER2OTHER <- ggplot() +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0.75, 1.01)) +
xlab("Score") +
#  ylab("") +
ylab("Rel. Freq./Probability") +
ggtitle("Re-select focal") +
theme_bw()
gOTHER2OTHER <- gOTHER2OTHER +
geom_point(aes(x = Score, y = Freqs), aux, alpha = alpha, size=1.5)
gOTHER2OTHER
head(aux)
gOTHER2OTHER <- ggplot() +
geom_point(aes(x = Score, y = Freqs), aux, alpha = alpha, size=1.5)
gOTHER2OTHER <- ggplot() +
geom_point(aes(x = Score, y = Freqs), aux, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0.75, 1.01)) +
xlab("Score") +
#  ylab("") +
ylab("Rel. Freq./Probability") +
ggtitle("Re-select focal") +
theme_bw()
gOTHER2OTHER
head(aux)
gOTHER2OTHER <- ggplot() +
geom_point(aes(x = Score, y = Freqs), data=aux, alpha=alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0.75, 1.01)) +
xlab("Score") +
#  ylab("") +
ylab("Rel. Freq./Probability") +
ggtitle("Re-select focal") +
theme_bw()
gOTHER2OTHER
head(aux)
gWS <- ggplot() +
geom_point(aes(x=Score, y=Freqs), data=aux, alpha=alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0.75, 1.01)) +
xlab("Score") +
ylab("Rel. Freq./Probability") +
ggtitle("Re-select focal") +
theme_bw()
gWS
head(aux)
head(df1B)
aux <- df1B[df1B$Score==32, ]
aux <- aux[aux$Region==aux$RegionGo, ]
head(aux)
gWS <- ggplot() +
geom_point(aes(x=Score, y=Freqs), data=aux, alpha=alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0.75, 1.01)) +
xlab("Score") +
ylab("Rel. Freq./Probability") +
ggtitle("Re-select focal") +
theme_bw()
gWS
head(df1A)
aux <- df1A[df1A$Score==32, ]
aux <- aux[aux$Region==aux$RegionGo, ]
head(aux)
min_score <- 30
max_score <- 33
alpha <- 0.5
gWS <- ggplot() +
geom_point(aes(x=Score, y=Freqs), data=aux, alpha=alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0.75, 1.01)) +
xlab("Score") +
ylab("Rel. Freq./Probability") +
ggtitle("Re-select focal") +
theme_bw()
gWS
head(df1B)
aux <- df1B[df1B$Score==32, ]
aux <- aux[aux$Region==aux$RegionGo, ]
head(aux)
gWS <- ggplot() +
geom_point(aes(x=Score, y=Freqs), data=aux, alpha=alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0.75, 1.01)) +
xlab("Score") +
ylab("Rel. Freq./Probability") +
ggtitle("Re-select focal") +
theme_bw()
gWS
head(aux)
head(df1A)
aux <- df1A[df1A$Score==32, ]
aux <- aux[aux$Region==aux$RegionGo, ]
head(aux)
min_score <- 30
max_score <- 33
alpha <- 0.5
gWSA <- ggplot() +
geom_point(aes(x=Score, y=Freqs), data=aux, alpha=alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0.75, 1.01)) +
xlab("Score") +
ylab("Rel. Freq./Probability") +
ggtitle("Re-select focal") +
theme_bw()
gWSA
head(df1B)
aux <- df1B[df1B$Score==32, ]
aux <- aux[aux$Region==aux$RegionGo, ]
head(aux)
gWSB <- ggplot() +
geom_point(aes(x=Score, y=Freqs), data=aux, alpha=alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0.75, 1.01)) +
xlab("Score") +
ylab("Rel. Freq./Probability") +
ggtitle("Re-select focal") +
theme_bw()
gWSB
grid.arrange(gWSA, gWSB)
grid.arrange(gWSA, gWSB, nrow=1)
head(aux)
aux
head(df1B)
aux <- df1B[df1B$Score==32, ]
aux <- aux[aux$Region==aux$RegionGo, ]
aux
head(df1A)
aux <- df1A[df1A$Score==32, ]
aux <- aux[aux$Region==aux$RegionGo, ]
aux
head(df1A)
aux <- df1A[df1A$Score==32, ]
aux <- aux[aux$Region!='RS', ]
aux <- aux[aux$Region==aux$RegionGo, ]
aux
min_score <- 30
max_score <- 33
alpha <- 0.5
gWSA <- ggplot() +
geom_point(aes(x=Score, y=Freqs), data=aux, alpha=alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0.75, 1.01)) +
xlab("Score") +
ylab("Rel. Freq./Probability") +
ggtitle("Re-select focal") +
theme_bw()
gWSA
head(df1B)
aux <- df1B[df1B$Score==32, ]
aux <- aux[aux$Region==aux$RegionGo, ]
aux
gWSB <- ggplot() +
geom_point(aes(x=Score, y=Freqs), data=aux, alpha=alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0.75, 1.01)) +
xlab("Score") +
ylab("Rel. Freq./Probability") +
ggtitle("Re-select focal") +
theme_bw()
gWSB
grid.arrange(gWSA, gWSB, nrow=1)
source("Model_Plots.R")
source('MODELpred-4deltas.R') # Load after Model_Plots
archivo <- "../Data/humans_only_absent.csv"
print(paste("Loading and preparing data", archivo, "..."))
dfA = read.csv(archivo)
df1A <- getRelFreq_Rows(dfA)
d2 <- plot_FocalTransitions(df1A)
d2 <- plot_ModelTransitions_Focal(thetaWS, d2, "#E69F00")
d2 <- plot_ModelTransitions_Focal(thetaFR, d2, "#56B4E9")
d2
# archivo <- "../Data/high_performing_human_dyads.csv"
archivo <- "../Data/humans_only_absent-1.csv"
print(paste("Loading and preparing data", archivo, "..."))
dfB = read.csv(archivo)
df1B <- getRelFreq_Rows(dfB)
d3 <- plot_FocalTransitions(df1B)
d3 <- plot_ModelTransitions_Focal(thetaWS, d2, "#E69F00")
d3 <- plot_ModelTransitions_Focal(thetaFR, d2, "#56B4E9")
d3
grid.arrange(d2, d3, nrow=1)
df$Region <- df$Category
archivo <- "../Data/humans_only_absent.csv"
print(paste("Loading and preparing data", archivo, "..."))
df = read.csv(archivo)
df1 <- getRelFreq_Rows(df)
d2 <- plot_FocalTransitions(df1)
d2 <- plot_ModelTransitions_Focal(thetaWS, d2, "#E69F00")
d2 <- plot_ModelTransitions_Focal(thetaFR, d2, "#56B4E9")
d2
df$Region <- df$Category
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
print(head(df))
args <- getFreqFRA(df, theta)
args <- get_FRASims(args)
head(args)
pA <- plot_Transitions_FRASim_k(args, 'ALL')
pA <- plot_ModelTransition_k_FRA(args, thetaFR, 'ALL')
pN <- plot_Transitions_FRASim_k(args, 'NOTHING')
pN <- plot_ModelTransition_k_FRA(args, thetaFR, 'NOTHING')
pL <- plot_Transitions_FRASim_k(args, 'LEFT')
pL <- plot_ModelTransition_k_FRA(args, thetaFR, 'LEFT')
pR <- plot_Transitions_FRASim_k(args, 'RIGHT')
pR <- plot_ModelTransition_k_FRA(args, thetaFR, 'RIGHT')
pT <- plot_Transitions_FRASim_k(args, 'TOP')
pT <- plot_ModelTransition_k_FRA(args, thetaFR, 'TOP')
pB <- plot_Transitions_FRASim_k(args, 'BOTTOM')
pB <- plot_ModelTransition_k_FRA(args, thetaFR, 'BOTTOM')
pI <- plot_Transitions_FRASim_k(args, 'IN')
pI <- plot_ModelTransition_k_FRA(args, thetaFR, 'IN')
pO <- plot_Transitions_FRASim_k(args, 'OUT')
pO <- plot_ModelTransition_k_FRA(args, thetaFR, 'OUT')
p <- grid.arrange(d2, pA, pN,
pI, pO,
pL, pR, pT, pB)
p
source("Model_Plots.R")
source('MODELpred-4deltas.R') # Load after Model_Plots
pA <- plot_Transitions_FRASim_k(args, 'ALL')
pA <- plot_ModelTransition_k_FRA(args, thetaFR, 'ALL')
pA
pA <- plot_Transitions_FRASim_k(args, 'ALL')
pA <- plot_ModelTransition_k_FRA(args, thetaFR, 'ALL')
pN <- plot_Transitions_FRASim_k(args, 'NOTHING')
pN <- plot_ModelTransition_k_FRA(args, thetaFR, 'NOTHING')
pL <- plot_Transitions_FRASim_k(args, 'LEFT')
pL <- plot_ModelTransition_k_FRA(args, thetaFR, 'LEFT')
pR <- plot_Transitions_FRASim_k(args, 'RIGHT')
pR <- plot_ModelTransition_k_FRA(args, thetaFR, 'RIGHT')
pT <- plot_Transitions_FRASim_k(args, 'TOP')
pT <- plot_ModelTransition_k_FRA(args, thetaFR, 'TOP')
pB <- plot_Transitions_FRASim_k(args, 'BOTTOM')
pB <- plot_ModelTransition_k_FRA(args, thetaFR, 'BOTTOM')
pI <- plot_Transitions_FRASim_k(args, 'IN')
pI <- plot_ModelTransition_k_FRA(args, thetaFR, 'IN')
pO <- plot_Transitions_FRASim_k(args, 'OUT')
pO <- plot_ModelTransition_k_FRA(args, thetaFR, 'OUT')
p <- grid.arrange(d2, pA, pN,
pI, pO,
pL, pR, pT, pB)
p
archivo <- "../Data/humans_only_absent.csv"
print(paste("Loading and preparing data", archivo, "..."))
df = read.csv(archivo)
df1 <- getRelFreq_Rows(df)
d2 <- plot_FocalTransitions(df1)
d2 <- plot_ModelTransitions_Focal(thetaWS, d2, "#E69F00")
d2 <- plot_ModelTransitions_Focal(thetaFR, d2, "#56B4E9")
d2
df$Region <- df$Category
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
print(head(df))
args <- getFreqFRA(df, theta)
args <- get_FRASims(args)
head(args)
pA <- plot_Transitions_FRASim_k(args, 'ALL')
pA <- plot_ModelTransition_k_FRA(args, thetaFR, 'ALL')
pN <- plot_Transitions_FRASim_k(args, 'NOTHING')
pN <- plot_ModelTransition_k_FRA(args, thetaFR, 'NOTHING')
pL <- plot_Transitions_FRASim_k(args, 'LEFT')
pL <- plot_ModelTransition_k_FRA(args, thetaFR, 'LEFT')
pR <- plot_Transitions_FRASim_k(args, 'RIGHT')
pR <- plot_ModelTransition_k_FRA(args, thetaFR, 'RIGHT')
pT <- plot_Transitions_FRASim_k(args, 'TOP')
pT <- plot_ModelTransition_k_FRA(args, thetaFR, 'TOP')
pB <- plot_Transitions_FRASim_k(args, 'BOTTOM')
pB <- plot_ModelTransition_k_FRA(args, thetaFR, 'BOTTOM')
pI <- plot_Transitions_FRASim_k(args, 'IN')
pI <- plot_ModelTransition_k_FRA(args, thetaFR, 'IN')
pO <- plot_Transitions_FRASim_k(args, 'OUT')
pO <- plot_ModelTransition_k_FRA(args, thetaFR, 'OUT')
p <- grid.arrange(d2, pA, pN,
pI, pO,
pL, pR, pT, pB)
p
# archivo <- "../Data/humans_only_absent.csv"
archivo <- "../Data/high_performing_human_dyads.csv"
print(paste("Loading and preparing data", archivo, "..."))
df = read.csv(archivo)
df1 <- getRelFreq_Rows(df)
d2 <- plot_FocalTransitions(df1)
d2 <- plot_ModelTransitions_Focal(thetaWS, d2, "#E69F00")
d2 <- plot_ModelTransitions_Focal(thetaFR, d2, "#56B4E9")
d2
df$Region <- df$Category
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
print(head(df))
args <- getFreqFRA(df, theta)
args <- get_FRASims(args)
head(args)
d2
source("MODELpred-4deltas.R")
fitModels2Data <- function(args) {
Trials <- 100
parametros <- list(rep(0, 14), rep(0, 14), rep(0, 14))
devs <- c(100000, 100000, 100000)
f_MBi <- searchBestFit_MBiases(args, N=Trials, module="nmkb", contador, FALSE)
f_WSLS <- searchBestFit_WSLS(args, N=Trials, module="nmkb", contador, FALSE)
f_FRA <- searchBestFit_FRA(args, N=Trials, module="nmkb", contador, FALSE)
print("--------------")
tryCatch({
print(cat("MBiases dev: ",f_MBi$value))
imprimir(f_MBi$par)
parametros[[1]] <- c('MBiases', f_MBi$par, rep(0,9))
devs[1] <- f_MBi$value
}, error = function(e) {
print("Optimizer didn't work for MBiases")
})
print("--------------")
tryCatch({
print(cat("WSLS dev: ",f_WSLS$value))
imprimir(f_WSLS$par)
parametros[[2]] <- c('WSLS', f_WSLS$par, rep(0,6))
devs[2] <- f_WSLS$value
}, error = function(e) {
print("Optimizer didn't work for WSLS")
})
print("--------------")
tryCatch({
print(cat("FRA dev: ",f_FRA$value))
imprimir(f_FRA$par)
parametros[[3]] <- c('FRA', f_FRA$par)
devs[3] <- f_FRA$value
}, error = function(e) {
print("Optimizer didn't work for FRA")
})
data <- as.data.frame(do.call(rbind, parametros))
names(data) <- c('Model', 'wA', 'wN', 'wL', 'wI',
'alpha', 'beta', 'gamma',
'delta', 'epsilon', 'zeta', 'delta1', 'delta2', 'delta3')
data$dev <- devs
return(data)
} # end fitModels2Data
# archivo <- "../Data/Confusion/Simulations/MB7.csv"
# archivo <- "../Data/Confusion/Simulations/WS2.csv"
# archivo <- "../Data/Confusion/Simulations/FR7.csv"
# archivo <- "../Data/humans_only_absent.csv"
archivo <- "../Data/high_performing_human_dyads.csv"
print(paste("Loading and preparing data", archivo, "..."))
df = read.csv(archivo)
df$Region <- df$Category
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
print(head(df))
args <- getFreqFRA(df, theta)
args <- get_FRASims_list(args)
print(head(args))
print("Data prepared!")
fitdata <- fitModels2Data(args)
write.csv(fitdata, '../Data/parameter_fit_humans.csv', row.names=FALSE)
source("Model_Plots.R")
source('MODELpred-4deltas.R') # Load after Model_Plots
####################################################
# Loading parameters from estimations...
####################################################
archivo <- "../Data/parameter_fit_humans.csv"
print(paste("Loading and preparing data", archivo, "..."))
parametros = read.csv(archivo)
thetaWS <- unlist(parametros[parametros['Model']=='WSLS', ][2:14])
imprimir(thetaWS)
thetaFR <- unlist(parametros[parametros['Model']=='FRA', ][2:14])
imprimir(thetaFR)
# archivo <- "../Data/humans_only_absent.csv"
archivo <- "../Data/high_performing_human_dyads.csv"
print(paste("Loading and preparing data", archivo, "..."))
df = read.csv(archivo)
df1 <- getRelFreq_Rows(df)
d2 <- plot_FocalTransitions(df1)
d2 <- plot_ModelTransitions_Focal(thetaWS, d2, "#E69F00")
d2 <- plot_ModelTransitions_Focal(thetaFR, d2, "#56B4E9")
d2
