p
library(sjPlot)
library(sjmisc)
install.packages("sjPlot")
install.packages("sjmisc")
source("Model_Plots.R")
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(archivo, theta)
#df = read.csv("../Python Codes/FRAsimulated.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/outputWSLS.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/output.csv", na.strings=c("","NA"))
#archivo <- "../Python Codes/FRA.csv"
archivo <- "humans_only_absent.csv"
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(archivo, theta)
source("Model_Plots.R")
#df = read.csv("../Python Codes/FRAsimulated.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/outputWSLS.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/output.csv", na.strings=c("","NA"))
archivo <- "../Python Codes/FRA.csv"
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(archivo, theta)
p
source("Model_Plots.R")
#df = read.csv("../Python Codes/FRAsimulated.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/outputWSLS.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/output.csv", na.strings=c("","NA"))
archivo <- "../Python Codes/FRA.csv"
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(archivo, theta)
#df = read.csv("../Python Codes/FRAsimulated.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/outputWSLS.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/output.csv", na.strings=c("","NA"))
# archivo <- "../Python Codes/FRA.csv"
archivo <- "humans_only_absent.csv"
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(archivo, theta)
source("Model_Plots.R")
p <- plot_behavior(archivo, theta)
source("Model_Plots.R")
p <- plot_behavior(archivo, theta)
source("Model_Plots.R")
#df = read.csv("../Python Codes/FRAsimulated.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/outputWSLS.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/output.csv", na.strings=c("","NA"))
# archivo <- "../Python Codes/FRA.csv"
archivo <- "humans_only_absent.csv"
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(archivo, theta)
source("Model_Plots.R")
#df = read.csv("../Python Codes/FRAsimulated.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/outputWSLS.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/output.csv", na.strings=c("","NA"))
# archivo <- "../Python Codes/FRA.csv"
archivo <- "humans_only_absent.csv"
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(archivo, theta)
source("Model_Plots.R")
#df = read.csv("../Python Codes/FRAsimulated.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/outputWSLS.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/output.csv", na.strings=c("","NA"))
# archivo <- "../Python Codes/FRA.csv"
archivo <- "humans_only_absent.csv"
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(archivo, theta)
p
#df = read.csv("../Python Codes/FRAsimulated.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/outputWSLS.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/output.csv", na.strings=c("","NA"))
archivo <- "../Python Codes/FRA.csv"
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(archivo, theta)
p
source("Model_Plots.R")
#df = read.csv("../Python Codes/FRAsimulated.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/outputWSLS.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/output.csv", na.strings=c("","NA"))
archivo <- "../Python Codes/FRA.csv"
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(archivo, theta)
source("Model_Plots.R")
#df = read.csv("../Python Codes/FRAsimulated.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/outputWSLS.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/output.csv", na.strings=c("","NA"))
archivo <- "../Python Codes/FRA.csv"
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(archivo, theta)
source("Model_Plots.R")
#df = read.csv("../Python Codes/FRAsimulated.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/outputWSLS.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/output.csv", na.strings=c("","NA"))
archivo <- "../Python Codes/FRA.csv"
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(archivo, theta)
source("Model_Plots.R")
#df = read.csv("../Python Codes/FRAsimulated.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/outputWSLS.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/output.csv", na.strings=c("","NA"))
archivo <- "../Python Codes/FRA.csv"
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(archivo, theta)
source("Model_Plots.R")
#df = read.csv("../Python Codes/FRAsimulated.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/outputWSLS.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/output.csv", na.strings=c("","NA"))
archivo <- "../Python Codes/FRA.csv"
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(archivo, theta)
source("Model_Plots.R")
#df = read.csv("../Python Codes/FRAsimulated.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/outputWSLS.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/output.csv", na.strings=c("","NA"))
archivo <- "../Python Codes/FRA.csv"
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(archivo, theta)
source("Model_Plots.R")
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(archivo, theta)
source("Model_Plots.R")
#df = read.csv("../Python Codes/FRAsimulated.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/outputWSLS.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/output.csv", na.strings=c("","NA"))
archivo <- "../Python Codes/FRA.csv"
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(archivo, theta)
source("Model_Plots.R")
#df = read.csv("../Python Codes/FRAsimulated.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/outputWSLS.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/output.csv", na.strings=c("","NA"))
archivo <- "../Python Codes/FRA.csv"
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(archivo, theta)
source("Model_Plots.R")
#df = read.csv("../Python Codes/FRAsimulated.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/outputWSLS.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/output.csv", na.strings=c("","NA"))
archivo <- "../Python Codes/FRA.csv"
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(archivo, theta)
source("Model_Plots.R")
#df = read.csv("../Python Codes/FRAsimulated.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/outputWSLS.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/output.csv", na.strings=c("","NA"))
archivo <- "../Python Codes/FRA.csv"
# archivo <- "humans_only_absent.csv"
# Loading data...
df = read.csv(archivo)
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(df, theta)
source("Model_Plots.R")
#df = read.csv("../Python Codes/FRAsimulated.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/outputWSLS.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/output.csv", na.strings=c("","NA"))
archivo <- "../Python Codes/FRA.csv"
# archivo <- "humans_only_absent.csv"
# Loading data...
df = read.csv(archivo)
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(df, theta)
df <- get_FRASims(df)
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
df <- get_FRASims(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
df <- find_joint_region(df)
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(df, theta)
source("Model_Plots.R")
#df = read.csv("../Python Codes/FRAsimulated.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/outputWSLS.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/output.csv", na.strings=c("","NA"))
archivo <- "../Python Codes/FRA.csv"
# archivo <- "humans_only_absent.csv"
# Loading data...
df = read.csv(archivo)
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(df, theta)
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
df <- get_FRASims(df) # Requires to run df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
regs <- c('ALL', 'DOWN', 'LEFT', 'IN')
q <- plot_FRA_regs1(df, regs, theta)
grid.arrange(p, q, heights=c(2/3, 1/3))
source("Model_Plots.R")
p <- plot_behavior(df, theta)
p <- plot_behavior(df, theta)
#df = read.csv("../Python Codes/FRAsimulated.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/outputWSLS.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/output.csv", na.strings=c("","NA"))
archivo <- "../Python Codes/FRA.csv"
# archivo <- "humans_only_absent.csv"
# Loading data...
df = read.csv(archivo)
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(df, theta)
grid.arrange(p, q, heights=c(2/3, 1/3))
source("Model_Plots.R")
#df = read.csv("../Python Codes/FRAsimulated.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/outputWSLS.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/output.csv", na.strings=c("","NA"))
# archivo <- "../Python Codes/FRA.csv"
archivo <- "humans_only_absent.csv"
# Loading data...
df = read.csv(archivo)
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(df, theta)
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
df <- get_FRASims(df) # Requires to run df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
regs <- c('ALL', 'DOWN', 'LEFT', 'IN')
q <- plot_FRA_regs1(df, regs, theta)
grid.arrange(p, q, heights=c(2/3, 1/3))
source("Model_Plots.R")
#df = read.csv("../Python Codes/FRAsimulated.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/outputWSLS.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/output.csv", na.strings=c("","NA"))
# archivo <- "../Python Codes/FRA.csv"
archivo <- "humans_only_absent.csv"
# Loading data...
df = read.csv(archivo)
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(df, theta)
grid.arrange(p, q, heights=c(2/3, 1/3))
source("Model_Plots.R")
#df = read.csv("../Python Codes/FRAsimulated.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/outputWSLS.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/output.csv", na.strings=c("","NA"))
# archivo <- "../Python Codes/FRA.csv"
archivo <- "humans_only_absent.csv"
# Loading data...
df = read.csv(archivo)
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(df, theta)
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
df <- get_FRASims(df) # Requires to run df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
regs <- c('ALL', 'DOWN', 'LEFT', 'IN')
q <- plot_FRA_regs1(df, regs, theta)
grid.arrange(p, q, heights=c(2/3, 1/3))
source("Model_Plots.R")
#df = read.csv("../Python Codes/FRAsimulated.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/outputWSLS.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/output.csv", na.strings=c("","NA"))
archivo <- "../Python Codes/FRA.csv"
# archivo <- "humans_only_absent.csv"
# Loading data...
df = read.csv(archivo)
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(df, theta)
df <- find_joint_region(df)
source("Model_Plots.R")
#df = read.csv("../Python Codes/FRAsimulated.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/outputWSLS.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/output.csv", na.strings=c("","NA"))
archivo <- "../Python Codes/FRA.csv"
# archivo <- "humans_only_absent.csv"
# Loading data...
df = read.csv(archivo)
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(df, theta)
#df = read.csv("../Python Codes/FRAsimulated.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/outputWSLS.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/output.csv", na.strings=c("","NA"))
archivo <- "../Python Codes/FRA.csv"
# archivo <- "humans_only_absent.csv"
# Loading data...
df = read.csv(archivo)
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(df, theta)
source("Model_Plots.R")
#df = read.csv("../Python Codes/FRAsimulated.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/outputWSLS.csv", na.strings=c("","NA"))
#df = read.csv("../Python Codes/output.csv", na.strings=c("","NA"))
archivo <- "../Python Codes/FRA.csv"
# archivo <- "humans_only_absent.csv"
# Loading data...
df = read.csv(archivo)
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(df, theta)
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
df <- get_FRASims(df) # Requires to run df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
regs <- c('ALL', 'DOWN', 'LEFT', 'IN')
q <- plot_FRA_regs1(df, regs, theta)
grid.arrange(p, q, heights=c(2/3, 1/3))
source("Model_Plots.R")
# archivo <- "../Python Codes/FRA.csv"
archivo <- "humans_only_absent.csv"
# Loading data...
df = read.csv(archivo)
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(df, theta)
source("Model_Plots.R")
# archivo <- "../Python Codes/FRA.csv"
archivo <- "humans_only_absent.csv"
# Loading data...
df = read.csv(archivo)
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(df, theta)
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
df <- get_FRASims(df) # Requires to run df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
regs <- c('ALL', 'DOWN', 'LEFT', 'IN')
q <- plot_FRA_regs1(df, regs, theta)
grid.arrange(p, q, heights=c(2/3, 1/3))
source("Model_Plots.R")
# archivo <- "../Python Codes/FRA.csv"
archivo <- "humans_only_absent.csv"
# Loading data...
df = read.csv(archivo)
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(df, theta)
source("Model_Plots.R")
# archivo <- "../Python Codes/FRA.csv"
archivo <- "humans_only_absent.csv"
# Loading data...
df = read.csv(archivo)
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
df <- getRelFreq_Rows(df)
p <- plot_behavior(df, theta) # Requires df <- getRelFreq_Rows(df)
source("Model_Plots.R")
# archivo <- "../Python Codes/FRA.csv"
archivo <- "humans_only_absent.csv"
# Loading data...
df = read.csv(archivo)
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
df <- getRelFreq_Rows(df)
p <- plot_behavior(df, theta) # Requires df <- getRelFreq_Rows(df)
source("Model_Plots.R")
# archivo <- "../Python Codes/FRA.csv"
archivo <- "humans_only_absent.csv"
# Loading data...
df = read.csv(archivo)
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(df, theta)
df <- find_joint_region(df)
source("Model_Plots.R")
archivo <- "humans_only_absent.csv"
df = read.csv(archivo)
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(df, theta, model=FALSE)
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
df <- get_FRASims(df) # Requires to run df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
regs <- c('ALL', 'DOWN', 'LEFT', 'IN')
q <- plot_FRA_regs1(df, regs, theta)
grid.arrange(p, q, heights=c(2/3, 1/3))
archivo <- "../Python Codes/FRA.csv"
df = read.csv(archivo)
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(df, theta)
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
df <- get_FRASims(df) # Requires to run df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
regs <- c('ALL', 'DOWN', 'LEFT', 'IN')
q <- plot_FRA_regs1(df, regs, theta)
grid.arrange(p, q, heights=c(2/3, 1/3))
archivo <- "humans_only_absent.csv"
df = read.csv(archivo)
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(df, theta)
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
df <- get_FRASims(df) # Requires to run df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
regs <- c('ALL', 'DOWN', 'LEFT', 'IN')
q <- plot_FRA_regs1(df, regs, theta)
grid.arrange(p, q, heights=c(2/3, 1/3))
source("Model_Plots.R")
source("Model_Plots.R")
archivo <- "humans_only_absent.csv"
df = read.csv(archivo)
source("Model_Plots.R")
archivo <- "humans_only_absent.csv"
df = read.csv(archivo)
###############################################
# Plot Parameter Recovery
###############################################
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
df2 <- getRelFreq_Rows(df)
p6 <- plot_FocalTransitions(df2)
p6 <- plot_ModelTransitions_Focal(theta, p6,"#999999")
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
df <- get_FRASims(df) # Requires to run df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
regs <- c('ALL', 'DOWN', 'LEFT', 'IN')
q <- plot_FRA_regs1(df, regs, theta)
grid.arrange(p6, q, nrow=2) #, heights=c(2/3, 1/3))
###############################################
# Plot Parameter Recovery
###############################################
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
df2 <- getRelFreq_Rows(df)
df$Region <- df$Category
###############################################
# Plot Parameter Recovery
###############################################
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
df2 <- getRelFreq_Rows(df)
source("Model_Plots.R")
archivo <- "humans_only_absent.csv"
df = read.csv(archivo)
df$Region <- df$Category
###############################################
# Plot Parameter Recovery
###############################################
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
df2 <- getRelFreq_Rows(df)
d1 <- plot_RSTransitions(df2)
d1 <- plot_ModelTransitions_RS(theta, d1,"#999999")
d2 <- plot_FocalTransitions(df2)
d2 <- plot_ModelTransitions_Focal(theta, d2,"#999999")
params <- para_visualizar(theta)
p1 <- grid.arrange(d1, d2, nrow=1,
bottom=params)
source("Model_Plots.R")
source("Model_Plots.R")
archivo <- "humans_only_absent.csv"
df = read.csv(archivo)
df$Region <- df$Category
###############################################
# Plot Parameter Recovery
###############################################
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
df2 <- getRelFreq_Rows(df)
d1 <- plot_RSTransitions(df2)
d1 <- plot_ModelTransitions_RS(theta, d1,"#999999")
d2 <- plot_FocalTransitions(df2)
d2 <- plot_ModelTransitions_Focal(theta, d2,"#999999")
params <- para_visualizar(theta)
p1 <- grid.arrange(d1, d2, nrow=1,
bottom=params)
p <- grid.arrange(d1, d2, nrow=1,
bottom=params)
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
df <- get_FRASims(df) # Requires to run df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
regs <- c('ALL', 'DOWN', 'LEFT', 'IN')
q <- plot_FRA_regs1(df, regs, theta)
grid.arrange(p, q, nrow=2) #, heights=c(2/3, 1/3))
d2 <- plot_FocalTransitions(df2)
source("Model_Plots.R")
archivo <- "humans_only_absent.csv"
df = read.csv(archivo)
df$Region <- df$Category
###############################################
# Plot Parameter Recovery
###############################################
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
df2 <- getRelFreq_Rows(df)
d1 <- plot_RSTransitions(df2)
d1 <- plot_ModelTransitions_RS(theta, d1,"#999999")
d2 <- plot_FocalTransitions(df2)
d2 <- plot_ModelTransitions_Focal(theta, d2,"#999999")
params <- para_visualizar(theta)
p <- grid.arrange(d1, d2, nrow=1,
bottom=params)
grid.arrange(p, q, nrow=2) #, heights=c(2/3, 1/3))
params <- paste("Parameters recovered:", params)
p <- grid.arrange(d1, d2, nrow=1,
bottom=params)
grid.arrange(p, q, nrow=2) #, heights=c(2/3, 1/3))
###############################################
# Plot humans qualitative behavior
p <- plot_behavior(df)
source("Model_Plots.R")
archivo <- "humans_only_absent.csv"
df = read.csv(archivo)
###############################################
# Plot humans qualitative behavior
p <- plot_behavior(df)
source("Model_Plots.R")
###############################################
# Plot humans qualitative behavior
p <- plot_behavior(df)
###############################################
# Plot FRA model
archivo <- "../Python Codes/FRA.csv"
df = read.csv(archivo)
theta <- c(0.056, 0.038, 0.01, 0.001, 499, 499, 2, 497, 499, 0.946)
p <- plot_behavior(df)
