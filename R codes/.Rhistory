setwd("~/Repositorios/DCL-DataAnalysis/R codes")
source("FRApred.R")
library(beepr)
#archivo <- "../Python Codes/Simulations/M5_full.csv"
#archivo <- "../Python Codes/Simulations/N1_full.csv"
#archivo <- "../Python Codes/Dyads/output-435-261.csv"
archivo <- "output-435-261.csv"
df = read.csv(archivo)
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
print(head(df))
args <- getFreqFRA(df, theta)
#  dplyr::mutate(FRASims = as.list(data.frame(c(FRASimALL,
#                                FRASimNOTHING,
#                                FRASimDOWN,
#                                FRASimUP,
#                                FRASimLEFT,
#                                FRASimRIGHT,
#                                FRASimIN,
#                                FRASimOUT)))
#                )
#args$FRAsims <- get_FRASims_list(args)
print(head(args))
aux <- get_FRASims(args)
aux
aux <- aux %>%
dplyr::mutate(FRASims = as.list(data.frame(c(FRASimALL,
FRASimNOTHING,
FRASimDOWN,
FRASimUP,
FRASimLEFT,
FRASimRIGHT,
FRASimIN,
FRASimOUT)))
)
aux
aux <- get_FRASims(args)
aux <- aux %>%
dplyr::mutate(FRASims = as.list(data.frame(c(FRASimALL,
FRASimNOTHING,
FRASimDOWN,
FRASimUP,
FRASimLEFT,
FRASimRIGHT,
FRASimIN,
FRASimOUT)))
) %>%
select(Region, RegionFULL, Score, RJcode, FRASims)
args
aux <- aux %>%
dplyr::mutate(FRASims = as.list(data.frame(c(FRASimALL,
FRASimNOTHING,
FRASimDOWN,
FRASimUP,
FRASimLEFT,
FRASimRIGHT,
FRASimIN,
FRASimOUT)))
) # %>%
aux <- get_FRASims(args)
aux <- aux %>%
dplyr::mutate(FRASims = as.list(data.frame(c(FRASimALL,
FRASimNOTHING,
FRASimDOWN,
FRASimUP,
FRASimLEFT,
FRASimRIGHT,
FRASimIN,
FRASimOUT)))
) # %>%
aux
aux <- get_FRASims(args)
aux <- aux %>%
dplyr::mutate(FRASims = as.list(data.frame(c(FRASimALL,
FRASimNOTHING,
FRASimDOWN,
FRASimUP,
FRASimLEFT,
FRASimRIGHT,
FRASimIN,
FRASimOUT)))
) %>%
select(Region, RegionFULL, Score, RJcode, FRASims)
aux
aux <- get_FRASims(args)
aux <- aux %>%
dplyr::mutate(FRASims = as.list(data.frame(c(FRASimALL,
FRASimNOTHING,
FRASimDOWN,
FRASimUP,
FRASimLEFT,
FRASimRIGHT,
FRASimIN,
FRASimOUT)))
) %>%
select(Region, RegionFULL, Score, RJcode, FRASims, freqs)
aux
source("FRApred.R")
#archivo <- "../Python Codes/Simulations/M5_full.csv"
#archivo <- "../Python Codes/Simulations/N1_full.csv"
#archivo <- "../Python Codes/Dyads/output-435-261.csv"
archivo <- "output-435-261.csv"
df = read.csv(archivo)
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
print(head(df))
args <- getFreqFRA(df, theta)
args$FRAsims <- get_FRASims_list(args)
print(head(args))
args <- getFreqFRA(df, theta)
args <- get_FRASims_list(args)
print(head(args))
b <- sigmoid(a, 1, 0.4)
a <- c(0.5, 0.5, 0.5, 0.5, 0.5, 0.2, 0.2, 0,3)
b <- sigmoid(a, 1, 0.4)
b
b <- sigmoid(a, 500, 0.4)
b
b <- sigmoid(a, 10, 0.4)
b
a <- c(0.5, 0.5, 0.5, 0.5, 0.5, 0.2, 0.2, 0.3)
b <- sigmoid(a, 10, 0.4)
b
source("FRApred.R")
source("FRApred.R")
source("FRApr
source("FRApred.R")
)library(beepr)
)
source("FRApred.R")
library(beepr)
#archivo <- "../Python Codes/Simulations/M5_full.csv"
#archivo <- "../Python Codes/Simulations/N1_full.csv"
#archivo <- "../Python Codes/Dyads/output-435-261.csv"
archivo <- "output-435-261.csv"
df = read.csv(archivo)
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
print(head(df))
args <- getFreqFRA(df, theta)
args <- get_FRASims_list(args)
print(head(args))
#args <- args[1:2, ]
f <- searchBestFit(args, 1)
args %>%
dplyr::group_by(RegionFULL, Score, RJcode) %>%
dplyr::mutate(probs = FRApred1(Region,
RegionFULL,
Score,
RJcode,
FRASims,
theta))
theta <- c(0.01, 0.01, 0.01, 0.01, 500, 500, 32, 500, 500, 0.7)
args %>%
dplyr::group_by(RegionFULL, Score, RJcode) %>%
dplyr::mutate(probs = FRApred1(Region,
RegionFULL,
Score,
RJcode,
FRASims,
theta))
source("FRApred.R")
args %>%
dplyr::group_by(RegionFULL, Score, RJcode) %>%
dplyr::mutate(probs = FRApred1(Region,
RegionFULL,
Score,
RJcode,
FRASims,
theta))
source("FRApred.R")
args %>%
dplyr::group_by(RegionFULL, Score, RJcode) %>%
dplyr::mutate(probs = FRApred1(Region,
RegionFULL,
Score,
RJcode,
FRASims,
theta))
#args <- args[1:2, ]
f <- searchBestFit(args, 1)
source("FRApred.R")
library(beepr)
#archivo <- "../Python Codes/Simulations/M5_full.csv"
#archivo <- "../Python Codes/Simulations/N1_full.csv"
#archivo <- "../Python Codes/Dyads/output-435-261.csv"
archivo <- "output-435-261.csv"
df = read.csv(archivo)
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
print(head(df))
args <- getFreqFRA(df, theta)
args <- get_FRASims_list(args)
print(head(args))
beep()
#args <- args[1:2, ]
f <- searchBestFit(args, 1)
source("FRApred.R")
#args <- args[1:2, ]
f <- searchBestFit(args, 1)
source("FRApred.R")
#args <- args[1:2, ]
f <- searchBestFit(args, 1)
source("FRApred.R")
#args <- args[1:2, ]
f <- searchBestFit(args, 1)
print(f)
#args <- args[1:2, ]
f <- searchBestFit(args, 1)
print(f$message)
print(imprimir(f$par))
#args <- args[1:2, ]
f <- searchBestFit(args, 10)
print(f$message)
print(imprimir(f$par))
source("FRApred.R")
library(beepr)
#archivo <- "../Python Codes/Simulations/M5_full.csv"
#archivo <- "../Python Codes/Simulations/N1_full.csv"
#archivo <- "../Python Codes/Dyads/output-435-261.csv"
archivo <- "output-435-261.csv"
df = read.csv(archivo)
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
print(head(df))
args <- getFreqFRA(df, theta)
args <- get_FRASims_list(args)
print(head(args))
beep()
#args <- args[1:2, ]
f <- searchBestFit(args, 100)
print(f$message)
print(imprimir(f$par))
beep()
#args <- args[1:2, ]
f <- searchBestFit(args, 100)
f <- searchBestFit(args, 100)
f <- searchBestFit(args, 100)
f <- searchBestFit(args, 1)
print(f$message)
print(imprimir(f$par))
f <- searchBestFit(args, 1)
print(f$message)
print(imprimir(f$par))
f
print(f$message)
print(paste("Dev:", f$value))
print(imprimir(f$par))
regs <- c('ALL', 'DOWN', 'IN')
p <- plot_FRA_regs(df, regs)
source("Model_Plots.R")
regs <- c('ALL', 'DOWN', 'IN')
p <- plot_FRA_regs(df, regs)
df <- get_FRASims(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
regs <- c('ALL', 'DOWN', 'IN')
p <- plot_FRA_regs(df, regs)
min_score <- 0
regs <- c('ALL', 'DOWN', 'IN')
p <- plot_FRA_regs(df, regs)
max_score <- 32
regs <- c('ALL', 'DOWN', 'IN')
p <- plot_FRA_regs(df, regs)
theta <- f$par
regs <- c('ALL', 'DOWN', 'IN')
p <- plot_FRA_regs(df, regs)
