sum(-sum(log(args$dev)))
args$probsFR <- mapply(function(Region, RegionFULL, Score, RJcode, FRASims) {
return(list(FRApred1(Region,
RegionFULL,
Score,
RJcode,
FRASims,
theta)))
},
args$Region, args$RegionFULL, args$Score, args$RJcode, args$FRASims)
# Calculate deviance
#  print('Calculating deviances')
args$devFR <- mapply(function(x,y) dmultinom(x, prob=unlist(y)), args$freqs, args$probs)
sum(args$devFR)
args$dev <- mapply(function(x,y) dmultinom(x, prob=unlist(y)), args$freqs, args$probs)
sum(-sum(log(args$dev)))
FRAutil(0.1, 0.083, 0.05, 0.006, 10, 1000, 0, 0, 1000, 0)
WSLSutil(0.1, 0.083, 0.05, 0.006, 10, 1000, 0)
source("MODELpred.R")
WSLSutil(0.1, 0.083, 0.05, 0.006, 10, 1000, 0)
source("MODELpred.R")
FRAutil(0.1, 0.083, 0.05, 0.006, 10, 1000, 0, 0, 1000, 0)
WSLSutil(0.1, 0.083, 0.05, 0.006, 10, 1000, 0)
source("MODELpred.R")
FRAutil(0.1, 0.083, 0.05, 0.006, 10, 1000, 0, 0, 1000, 0)
WSLSutil(0.1, 0.083, 0.05, 0.006, 10, 1000, 0)
source("MODELpred.R")
source("MODELpred.R")
FRAutil(0.1, 0.083, 0.05, 0.006, 10, 1000, 0, 0, 1000, 0)
WSLSutil(0.1, 0.083, 0.05, 0.006, 10, 1000, 0)
source("MODELpred.R")
FRAutil(0.1, 0.083, 0.05, 0.006, 10, 1000, 0, 0, 1000, 0)
WSLSutil(0.1, 0.083, 0.05, 0.006, 10, 1000, 0)
source("MODELpred.R")
FRAutil(0.1, 0.083, 0.05, 0.006, 10, 1000, 0, 0, 1000, 0)
WSLSutil(0.1, 0.083, 0.05, 0.006, 10, 1000, 0)
source("MODELpred.R")
FRAutil(0.1, 0.083, 0.05, 0.006, 10, 1000, 0, 0, 1000, 0)
WSLSutil(0.1, 0.083, 0.05, 0.006, 10, 1000, 0)
theta <- c(0.1, 0.083, 0.05, 0.006, 10, 1000, 0, 0, 1000, 0)
args$probsWS <- mapply(function(i,s) {
return(list(WSLSpred(i, s, theta)))
},
args$Region, args$Score)
# Calculate deviance
#  print('Calculating deviances')
args$devWS <- mapply(function(x,y) dmultinom(x, prob=unlist(y)), args$freqs, args$probs)
sum(args$devWS)
args$dev <- mapply(function(x,y) dmultinom(x, prob=unlist(y)), args$freqs, args$probs)
sum(-sum(log(args$dev)))
args$probsFR <- mapply(function(Region, RegionFULL, Score, RJcode, FRASims) {
return(list(FRApred1(Region,
RegionFULL,
Score,
RJcode,
FRASims,
theta)))
},
args$Region, args$RegionFULL, args$Score, args$RJcode, args$FRASims)
# Calculate deviance
#  print('Calculating deviances')
args$devFR <- mapply(function(x,y) dmultinom(x, prob=unlist(y)), args$freqs, args$probs)
sum(args$devFR)
args$dev <- mapply(function(x,y) dmultinom(x, prob=unlist(y)), args$freqs, args$probs)
sum(-sum(log(args$dev)))
WSLSutil(0.1, 0.083, 0.05, 0.006, 10, 1000, 0)
theta <- c(0.1, 0.083, 0.05, 0.006, 10, 1000, 0, 0, 1000, 0)
args$probsWS <- mapply(function(i,s) {
return(list(WSLSpred(i, s, theta)))
},
args$Region, args$Score)
# Calculate deviance
#  print('Calculating deviances')
args$devWS <- mapply(function(x,y) dmultinom(x, prob=unlist(y)), args$freqs, args$probs)
sum(args$devWS)
args <- getFreqFRA(df, theta)
args <- get_FRASims_list(args)
print(head(args))
print("Data prepared!")
theta <- c(0.1, 0.083, 0.05, 0.006, 10, 1000, 0, 0, 1000, 0)
args$probsWS <- mapply(function(i,s) {
return(list(WSLSpred(i, s, theta)))
},
args$Region, args$Score)
# Calculate deviance
#  print('Calculating deviances')
args$devWS <- mapply(function(x,y) dmultinom(x, prob=unlist(y)), args$freqs, args$probsWS)
sum(args$devWS)
args$dev <- mapply(function(x,y) dmultinom(x, prob=unlist(y)), args$freqs, args$probsWS)
sum(-sum(log(args$dev)))
args$probsFR <- mapply(function(Region, RegionFULL, Score, RJcode, FRASims) {
return(list(FRApred1(Region,
RegionFULL,
Score,
RJcode,
FRASims,
theta)))
},
args$Region, args$RegionFULL, args$Score, args$RJcode, args$FRASims)
# Calculate deviance
#  print('Calculating deviances')
args$devFR <- mapply(function(x,y) dmultinom(x, prob=unlist(y)), args$freqs, args$probsFR)
sum(args$devFR)
args$dev <- mapply(function(x,y) dmultinom(x, prob=unlist(y)), args$freqs, args$probsFR)
sum(-sum(log(args$dev)))
a <- args[which(args$probsFR != args$probsWS), ]
a <- args[which(args$devFR != args$devWS), ]
a
a <- args[which(args$devFR != args$devWS), c(10, 12)]
a <- args[which(args$devFR != args$devWS), c(10, 12)]
a <- args[which(args$devFR != args$devWS),]
a
a %>% select(Region, Score, FRASims, probsWS, probsFR)
imprimir(a$probsWS)
lapply(a$probsWS, imprimir(x))
lapply(a$probsWS, imprimir())
lapply(a$probsWS, function(x) imprimir(x))
lapply(a$probsWS[1:2], function(x) imprimir(x))
lapply(a$probsFR[1:2], function(x) imprimir(x))
args <- args[1:2]
FRAutil(0.1, 0.083, 0.05, 0.006, 10, 1000, 0, 0, 1000, 0)
args <- aux
args <- args[1:2, ]
args <- getFreqFRA(df, theta)
args <- get_FRASims_list(args)
aux <- args
args <- aux
args <- args[1:2, ]
FRAutil(0.1, 0.083, 0.05, 0.006, 10, 1000, 0, 0, 1000, 0)
WSLSutil(0.1, 0.083, 0.05, 0.006, 10, 1000, 0)
source("MODELpred.R")
FRAutil(0.1, 0.083, 0.05, 0.006, 10, 1000, 0, 0, 1000, 0)
WSLSutil(0.1, 0.083, 0.05, 0.006, 10, 1000, 0)
source("MODELpred.R")
args <- aux
FRAutil(0.1, 0.083, 0.05, 0.006, 10, 1000, 0, 0, 1000, 0)
WSLSutil(0.1, 0.083, 0.05, 0.006, 10, 1000, 0)
MBIASESutil(0.1, 0.083, 0.05, 0.006)
MBIASESutil(0.1, 0.083, 0.05, 0.006)
WSLSutil(0.1, 0.083, 0.05, 0.006, 0, 1000, 0)
FRAutil(0.1, 0.083, 0.05, 0.006, 0, 1000, 0, 0, 1000, 0)
WSLSutil(0.1, 0.083, 0.05, 0.006, 10, 1000, 0)
FRAutil(0.1, 0.083, 0.05, 0.006, 10, 1000, 0, 0, 1000, 0)
source("MODELpred.R")
fitModels2Data <- function(args) {
Trials <- 1
pars <- c(list(c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)),
list(c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)),
list(c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)))
print("Fitting MBiases...")
f_MBi <- searchBestFit_MBiases(args, N=Trials, module="nmkb")
print("Fitting WSLS...")
f_WSLS <- searchBestFit_WSLS(args, N=Trials, module="nmkb")
print("Fitting FRA...")
f_FRA <- searchBestFit_FRA(args, N=Trials, module="nmkb")
tryCatch({
print(cat("MBiases dev: ",f_MBi$value))
imprimir(f_MBi$par)
}, error = function(e) {
print("Optimizer didn't work for MBiases")
})
print("--------------")
tryCatch({
print(cat("WSLS dev: ",f_WSLS$value))
imprimir(f_WSLS$par)
}, error = function(e) {
print("Optimizer didn't work for WSLS")
})
print("--------------")
tryCatch({
print(cat("FRA dev: ",f_FRA$value))
imprimir(f_FRA$par)
}, error = function(e) {
print("Optimizer didn't work for FRA")
})
return(pars)
} # end fitModels2Data
archivo <- "../Data/humans_only_absent.csv"
print(paste("Loading and preparing data", archivo, "..."))
df = read.csv(archivo)
df$Region <- df$Category
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
print(head(df))
args <- getFreqFRA(df, theta)
args <- get_FRASims_list(args)
print(head(args))
print("Data prepared!")
parametros <- fitModels2Data(args)
source("MODELpred.R")
fitModels2Data <- function(args) {
Trials <- 1
pars <- c(list(c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)),
list(c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)),
list(c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)))
print("Fitting MBiases...")
f_MBi <- searchBestFit_MBiases(args, N=Trials, module="nmkb")
print("Fitting WSLS...")
f_WSLS <- searchBestFit_WSLS(args, N=Trials, module="nmkb")
print("Fitting FRA...")
f_FRA <- searchBestFit_FRA(args, N=Trials, module="nmkb")
tryCatch({
print(cat("MBiases dev: ",f_MBi$value))
imprimir(f_MBi$par)
}, error = function(e) {
print("Optimizer didn't work for MBiases")
})
print("--------------")
tryCatch({
print(cat("WSLS dev: ",f_WSLS$value))
imprimir(f_WSLS$par)
}, error = function(e) {
print("Optimizer didn't work for WSLS")
})
print("--------------")
tryCatch({
print(cat("FRA dev: ",f_FRA$value))
imprimir(f_FRA$par)
}, error = function(e) {
print("Optimizer didn't work for FRA")
})
return(pars)
} # end fitModels2Data
# archivo <- "../Data/humans_only_absent.csv"
archivo <- "../Data/high_performing_human_dyads.csv"
print(paste("Loading and preparing data", archivo, "..."))
df = read.csv(archivo)
df$Region <- df$Category
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
print(head(df))
args <- getFreqFRA(df, theta)
args <- get_FRASims_list(args)
print(head(args))
print("Data prepared!")
parametros <- fitModels2Data(args)
archivo <- "../Data/humans_only_absent.csv"
# archivo <- "../Data/high_performing_human_dyads.csv"
print(paste("Loading and preparing data", archivo, "..."))
df = read.csv(archivo)
df$Region <- df$Category
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
print(head(df))
args <- getFreqFRA(df, theta)
args <- get_FRASims_list(args)
print(head(args))
print("Data prepared!")
parametros <- fitModels2Data(args)
source("MODELpred.R")
params <- c(0.01, 0.01, 0.08, 0.001, 10, 100, 30, 1)
source("MODELpred.R")
f <- searchFit_WSLS_NMKB(params, args)
params <- c(0.01, 0.01, 0.08, 0.001, 10, 100, 30, 0.1)
f <- searchFit_WSLS_NMKB(params, args)
params <- c(0.01, 0.01, 0.08, 0.001, 1, 100, 1, 0.1)
f <- searchFit_WSLS_NMKB(params, args)
params <- c(0.01, 0.01, 0.08, 0.001, 1, 100, 1, 0.01)
f <- searchFit_WSLS_NMKB(params, args)
params <- c(0.01, 0.01, 0.08, 0.001, 1, 100, 1, 2)
f <- searchFit_WSLS_NMKB(params, args)
theta <-params
WSLSutil(0.01, 0.01, 0.08, 0.001, 1, 100, 1, 2)
f <- searchFit_WSLS_NMKB(params, args)
WSLSutil(0.01, 0.04, 0.008, 0.001, 7, 999, 1, 2)
params <- c(0.01, 0.04, 0.008, 0.001, 7, 999.5, 1, 2)
f <- searchFit_WSLS_NMKB(params, args)
params <- c(0.01, 0.04, 0.008, 0.001, 7, 999.5, 1, 1)
f <- searchFit_WSLS_NMKB(params, args)
params <- c(0.01, 0.04, 0.008, 0.001, 7, 999.5, 1, 0.1)
f <- searchFit_WSLS_NMKB(params, args)
WSLSutil(0.01, 0.04, 0.008, 0.001, 7, 999.5, 1, 2)
WSLSutil(0.01, 0.04, 0.008, 0.001, 7, 999.5, 1, 0.1)
WSLSutil(0.01, 0.04, 0.008, 0.001, 7, 999.5, 1, 3)
WSLSutil(0.01, 0.04, 0.008, 0.001, 7, 999.5, 1, 10)
WSLSutil(0.01, 0.04, 0.008, 0.001, 7, 999.5, 1, 6)
WSLSutil(0.01, 0.04, 0.008, 0.001, 7, 999.5, 1, 4)
WSLSutil(0.01, 0.04, 0.008, 0.001, 7, 999.5, 1, 5)
params <- c(0.01, 0.04, 0.008, 0.001, 7, 999.5, 1, 4)
f <- searchFit_WSLS_NMKB(params, args)
archivo <- "../Data/humans_only_absent.csv"
# archivo <- "../Data/high_performing_human_dyads.csv"
print(paste("Loading and preparing data", archivo, "..."))
df = read.csv(archivo)
df$Region <- df$Category
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
print(head(df))
args <- getFreqFRA(df, theta)
args <- get_FRASims_list(args)
print(head(args))
print("Data prepared!")
params <- c(0.01, 0.04, 0.008, 0.001, 7, 999.5, 1, 4)
theta <-params
f <- searchBestFit_WSLS(args)
f <- searchBestFit_WSLS(args, 10)
WSLSpred("LEFT", "1", params)
WSLSpred("LEFT", 1, params)
WSLSpred("RS", 1, params)
params <- c(0.01, 0.04, 0.008, 0.001, 0, 999.5, 1, 4)
WSLSpred("RS", 1, params)
source("MODELpred.R")
params <- c(0.01, 0.04, 0.008, 0.001, 0, 999.5, 1, 4)
WSLSpred("RS", 1, params)
params <- c(0.01, 0.04, 0.008, 0.001, 0, 999.5, 1, 5)
WSLSpred("RS", 1, params)
params <- c(0.01, 0.04, 0.008, 0.001, 1, 999.5, 10, 5)
WSLSpred("RS", 1, params)
WSLSpred("RS", 11, params)
WSLSpred("LEFT", 11, params)
params <- c(0.01, 0.04, 0.008, 0.001, 1, 999.5, 10, 10)
WSLSpred("LEFT", 11, params)
params <- c(0.01, 0.04, 0.008, 0.001, 1, 999.5, 10, 11)
WSLSpred("LEFT", 11, params)
params <- c(0.01, 0.04, 0.008, 0.001, 1, 999.5, 10, 12)
WSLSpred("LEFT", 11, params)
WSLSutil(0.01, 0.04, 0.008, 0.001, 1, 999.5, 10, 12)
params <- c(0.01, 0.04, 0.008, 0.001, 1, 999.5, 10, 12)
WSLSpred("LEFT", 11, params)
source("MODELpred.R")
params <- c(0.01, 0.04, 0.008, 0.001, 1, 999.5, 10, 12)
WSLSpred("LEFT", 11, params)
f <- searchFit_WSLS_NMKB(params, args)
f <- searchBestFit_WSLS(args, 10)
f <- searchBestFit_WSLS(args, 10)
params <- c(0.01, 0.04, 0.008, 0.001, 1, 999.5, 10, 1)
f <- searchFit_WSLS_NMKB(params, args)
f <- searchBestFit_WSLS(args, 10)
WSLSutil(0.01, 0.04, 0.008, 0.001, 1, 999.5, 10, 1)
f <- searchFit_WSLS_NMKB(params, args)
source("MODELpred.R")
params <- c(0.01, 0.04, 0.008, 0.001, 1, 999.5, 10, 1)
WSLSpred("LEFT", 11, params)
f <- searchFit_WSLS_NMKB(params, args)
f <- searchBestFit_WSLS(args, 10)
f <- searchBestFit_WSLS(args, 10)
WSLSutil(0.01, 0.04, 0.008, 0.001, 10, 999.5, 10, 1)
params <- c(0.01, 0.04, 0.008, 0.001, 10, 999.5, 10, 1)
WSLSpred("LEFT", 11, params)
params <- c(0.01, 0.04, 0.008, 0.001, 10, 999.5, 10, 0.1)
WSLSpred("LEFT", 11, params)
params <- c(0.01, 0.04, 0.008, 0.001, 100, 999.5, 10, 0.1)
WSLSpred("LEFT", 11, params)
params <- c(0.01, 0.04, 0.008, 0.001, 100, 999.5, 10, 1)
WSLSpred("LEFT", 11, params)
params <- c(0.01, 0.04, 0.008, 0.001, 100, 999.5, 10, 2)
WSLSpred("LEFT", 11, params)
params <- c(0.01, 0.04, 0.008, 0.001, 10, 999.5, 10, 2)
WSLSpred("LEFT", 11, params)
params <- c(0.01, 0.04, 0.008, 0.001, 10, 999.5, 10, 1)
WSLSpred("LEFT", 11, params)
source("MODELpred.R")
params <- c(0.01, 0.04, 0.008, 0.001, 10, 999.5, 10, 1)
WSLSpred("LEFT", 11, params)
f <- searchFit_WSLS_NMKB(params, args)
f
f <- searchFit_WSLS_NMKB(params, args)
f
f <- searchFit_WSLS_NMKB(params, args)
f
source("MODELpred.R")
f <- searchFit_WSLS_NMKB(params, args)
f
MBIASESpred(params)
params <- c(0.01, 0.04, 0.008, 0.001, 10, 999.5, 10, 2)
WSLSpred("LEFT", 11, params)
MBIASESpred(params)
params <- c(1, 0.01, 0.04, 0.008, 0.001)
MBIASESpred(params)
source("MODELpred.R")
params <- c(1, 0.01, 0.04, 0.008, 0.001)
MBIASESpred(params)
params <- c(2, 0.01, 0.04, 0.008, 0.001)
MBIASESpred(params)
f <- searchFit_MBiases_NMKB(params, args)
params <- c(2, 0.01, 0.04, 0.008, 0.001)
MBIASESpred(params)
f <- searchFit_MBiases_NMKB(params, args)
params <- c(1, 0.01, 0.04, 0.008, 0.001)
MBIASESpred(params)
f <- searchFit_MBiases_NMKB(params, args)
f <- searchBestFit_MBiases_NMKB(params, args)
f <- searchBestFit_MBiases(params, args)
f <- searchBestFit_MBiases(args)
f <- searchBestFit_MBiases(args)
MBIASESutil(1, 0.01, 0.04, 0.008, 0.001)
source("MODELpred.R")
MBIASESutil(1, 0.01, 0.04, 0.008, 0.001)
MBIASESutil(2, 0.01, 0.04, 0.008, 0.001)
MBIASESutil(4, 0.01, 0.04, 0.008, 0.001)
MBIASESutil(2, 0.01, 0.04, 0.008, 0.001)
MBIASESutil(3, 0.01, 0.04, 0.008, 0.001)
f <- searchFit_MBiases_NMKB(params, args)
f
params <- c(3, 0.01, 0.04, 0.008, 0.001, 10, 1000, 10)
MBIASESpred(params)
WSLSpred("LEFT", 11, params)
# params <- c(3, 0.01, 0.04, 0.008, 0.001, 10, 1000, 10)
params <- c(3, 0.01, 0.04, 0.008, 0.001, 0, 1000, 10)
MBIASESpred(params)
WSLSpred("LEFT", 11, params)
source("MODELpred.R")
# params <- c(3, 0.01, 0.04, 0.008, 0.001, 10, 1000, 10)
params <- c(3, 0.01, 0.04, 0.008, 0.001, 0, 1000, 10)
MBIASESpred(params)
WSLSpred("LEFT", 11, params)
params <- c(3, 0.01, 0.04, 0.008, 0.001, 1, 1000, 10)
MBIASESpred(params)
WSLSpred("LEFT", 11, params)
MBIASESutil(3, 0.01, 0.04, 0.008, 0.001)
WSLSutil(3, 0.01, 0.04, 0.008, 0.001, 1, 1000, 10)
MBIASESutil(3, 0.01, 0.04, 0.008, 0.001)
WSLSutil(3, 0.01, 0.04, 0.008, 0.001, 0, 1000, 10)
WSLSutil(3, 0.01, 0.04, 0.008, 0.001, 1, 1000, 10)
theta <-params
f <- searchBestFit_MBiases(args)
f <- searchFit_WSLS_NMKB(params, args)
params <- c(3, 0.01, 0.04, 0.008, 0.001, 1, 1000, 10)
f <- searchFit_WSLS_NMKB(params, args)
f <- searchBestFit_WSLS(args, 10)
source("MODELpred.R")
f <- searchFit_WSLS_NMKB(params, args)
f <- searchBestFit_WSLS(args, 10)
f <- searchBestFit_WSLS(args, 10)
f <- searchBestFit_WSLS(args, 10)
f <- searchBestFit_MBiases(args)
f <- searchFit_WSLS_NMKB(params, args)
f <- searchFit_MBiases_NMKB(params, args)
f <- searchFit_MBiases_NMKB(params, args)
params <- c(3, 0.01, 0.04, 0.008, 0.001, 1, 1000, 10)
MBIASESpred(params)
WSLSpred("LEFT", 11, params)
MBIASESutil(3, 0.01, 0.04, 0.008, 0.001)
WSLSutil(3, 0.01, 0.04, 0.008, 0.001, 1, 1000, 10)
f <- searchFit_MBiases_NMKB(params, args)
params <- c(1, 0.01, 0.04, 0.008, 0.001, 1, 1000, 10)
MBIASESpred(params)
WSLSpred("LEFT", 11, params)
MBIASESutil(1, 0.01, 0.04, 0.008, 0.001)
WSLSutil(1, 0.01, 0.04, 0.008, 0.001, 1, 1000, 10)
f <- searchFit_MBiases_NMKB(params, args)
params <- c(1, 0.01, 0.04, 0.008, 0.001, 0, 1000, 10)
MBIASESutil(1, 0.01, 0.04, 0.008, 0.001)
WSLSutil(1, 0.01, 0.04, 0.008, 0.001, 1, 1000, 10)
f <- searchFit_MBiases_NMKB(params, args)
source("MODELpred.R")
params <- c(1, 0.01, 0.04, 0.008, 0.001, 0, 1000, 10)
MBIASESpred(params)
WSLSpred("LEFT", 11, params)
MBIASESutil(1, 0.01, 0.04, 0.008, 0.001)
WSLSutil(1, 0.01, 0.04, 0.008, 0.001, 0, 1000, 10)
f <- searchFit_MBiases_NMKB(params, args)
params <- c(2, 0.01, 0.04, 0.008, 0.001, 0, 1000, 10)
f <- searchFit_MBiases_NMKB(params, args)
f <- searchBestFit_MBiases(args)
f <- searchBestFit_WSLS(args, 10)
f <- searchBestFit_WSLS(args, 100)
WSLSutil(4, 0.01, 0.04, 0.008, 0.001, 100, 1000, 10)
WSLSutil(3, 0.01, 0.04, 0.008, 0.001, 100, 1000, 10)
WSLSutil(6, 0.01, 0.04, 0.008, 0.001, 100, 1000, 10)
WSLSutil(4, 0.01, 0.04, 0.008, 0.001, 100, 1000, 10)
WSLSutil(5, 0.01, 0.04, 0.008, 0.001, 100, 1000, 10)
4
WSLSutil(4, 0.01, 0.04, 0.008, 0.001, 1000, 1000, 10)
WSLSutil(4, 0.01, 0.04, 0.008, 0.001, 100, 1000, 10)
WSLSutil(4, 0.01, 0.04, 0.008, 0.001, 10, 1000, 10)
WSLSutil(4, 0.01, 0.04, 0.008, 0.001, 10, 1000, 10)
source("MODELpred.R")
f <- searchBestFit_WSLS(args, 10)
f <- searchBestFit_WSLS(args, 10)
f <- searchBestFit_WSLS(args, 10)
params <- c(2, 0.01, 0.04, 0.008, 0.001, 0, 1000, 10)
params <- c(2, 0.01, 0.04, 0.008, 0.001, 0.1, 1000, 10)
f <- searchFit_WSLS_NMKB(params, args)
WSLSutil(4, 0.12, 0.12, 0.12, 0.12, 100, 1000, 32)
WSLSutil(4, 0.01, 0.01, 0.01, 0.01, 10, 1000, 10)
params <- c(4, 0.01, 0.01, 0.01, 0.01, 10, 1000, 10)
f <- searchFit_MBiases_NMKB(params, args)
warnings()
source("MODELpred.R")
f <- searchFit_WSLS_NMKB(params, args)
source("MODELpred.R")
f <- searchFit_MBiases_NMKB(params, args)
source("MODELpred.R")
f <- searchFit_WSLS_NMKB(params, args)
f <- searchFit_WSLS_NMKB(params, args)
source("MODELpred.R")
f <- searchFit_WSLS_NMKB(params, args)
source("MODELpred.R")
f <- searchBestFit_WSLS(args, 10)
f <- searchBestFit_WSLS(args, 10)
source("MODELpred.R")
f <- searchBestFit_WSLS(args, 10)
source("MODELpred.R")
f <- searchFit_MBiases_NMKB(params, args)
f <- searchBestFit_WSLS(args, 10)
source("MODELpred.R")
MBIASESutil(1, 0.01, 0.04, 0.008, 0.001)
WSLSutil(4, 0.01, 0.01, 0.01, 0.01, 10, 1000, 10)
FRAutil(4, 0.12, 0.12, 0.12, 0.12, 100, 1000, 32, 0, 0, 0)
FRApred("LEFT", regionsCoded[5], 11, "", params)
FRApred("LEFT", regionsCoded[5], 11, "", 0, params)
params <- c(4, 0.01, 0.01, 0.01, 0.01, 10, 1000, 10)
FRApred("LEFT", regionsCoded[5], 11, "", 0, params)
source("MODELpred.R")
FRApred("LEFT", regionsCoded[5], 11, "", 0, params)
source("MODELpred.R")
FRApred("LEFT", regionsCoded[5], 11, "", 0, params)
