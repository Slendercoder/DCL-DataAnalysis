gOTHER2OTHER <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, group = Region, color = Region),
df_Focal, color = color_a_usar, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
ggtitle(titulo) +
theme_bw()
gOTHER2OTHER
k = regs[1]
df1 <- getFreq_based_on_FRASim(df, k)
df1
df1 <- getFreq_based_on_FRASim(df, k)
df1
df = read.csv(archivo)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
#finding joint region
df <- find_joint_region(df)
df <- get_FRASims(df)
beep()
head(df)
k = regs[1]
df1 <- getFreq_based_on_FRASim(df, k)
df1
df1 <- df1[df1$Region == k, ]
df1
k = regs[2]
df1 <- getFreq_based_on_FRASim(df, k)
df1
df1 <- df1[df1$Region == k, ]
df1
#archivo <- "../Python Codes/Simulations/M5_full.csv"
archivo <- "../Python Codes/Simulations/N1_full.csv"
df = read.csv(archivo)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
#finding joint region
df <- find_joint_region(df)
df <- get_FRASims(df)
beep()
head(df)
regs <- c('DOWN', 'RIGHT')
k = regs[2]
df1 <- getFreq_based_on_FRASim(df, k)
df1
df1 <- df1[df1$Region == k, ]
df1
df1 <- getFreq_based_on_FRASim(df, k)
df1 <- df1[df1$Region == 'RS', ]
df1
d1 <- plot_RSTransitions_FRA(df1, k)
df_Focal <- df1[df1$Region == 'RS', ]
df_Focal
df_Focal <- df_Focal[df_Focal$RegionGo == k, ]
df_Focal
regs_go <- regiones[which(regiones != k)]
regs_go
regs_go <- regiones[which(regiones[2:9] != k)]
regs_go
regs_go <- regs_go[2:9]
regs_go
regs_go <- regs_go[2:7]
regs_go <- regiones[which(regiones != k)]
regs_go <- regs_go[2:7]
regs_go
regs_go <- regiones[which(regiones != k)]
regs_go
regs_go <- regs_go[2:8]
regs_go
d1 <- plot_RSTransitions_FRA(df1, k)
df_Focal <- df1[df1$Region == 'RS', ]
regs_go <- regiones[which(regiones != k)]
regs_go <- regs_go[2:8]
for (j in regs_go) {
df_Focal <- df_Focal[df_Focal$RegionGo != k, ]
}
df_Focal
gOTHER2OTHER <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, group = Region, color = Region),
df_Focal, color = color_a_usar, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
ggtitle(titulo) +
theme_bw()
gOTHER2OTHER
gOTHER2OTHER <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, group = RegionGo, color = RegionGo),
df_Focal, color = color_a_usar, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
ggtitle(titulo) +
theme_bw()
gOTHER2OTHER
gOTHER2OTHER <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, group = RegionGo, color = RegionGo),
df_Focal, color = color_a_usar, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
#  ggtitle(titulo) +
theme_bw()
gOTHER2OTHER
regs_go
df_Focal
k = regs[2]
k
df1 <- getFreq_based_on_FRASim(df, k)
df_Focal <- df1[df1$Region == 'RS', ]
df_Focal
regs_go <- regiones[which(regiones != k)]
regs_go <- regs_go[2:8]
for (j in regs_go) {
df_Focal <- df_Focal[df_Focal$RegionGo != j, ]
}
gOTHER2OTHER <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, group = RegionGo, color = RegionGo),
df_Focal, color = color_a_usar, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
#  ggtitle(titulo) +
theme_bw()
gOTHER2OTHER
regs_go <- regiones[which(regiones != k)]
regs_go
#regs_go <- regs_go[2:8]
for (j in regs_go) {
df_Focal <- df_Focal[df_Focal$RegionGo != j, ]
}
gOTHER2OTHER <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, group = RegionGo, color = RegionGo),
df_Focal, color = color_a_usar, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
#  ggtitle(titulo) +
theme_bw()
gOTHER2OTHER
df_Focal
df_Focal$RegionGo
color_a_usar <- cbPalette[which(regiones == k)]
gOTHER2OTHER <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs),
df_Focal, color = color_a_usar, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
#  ggtitle(titulo) +
theme_bw()
gOTHER2OTHER
g2 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs),
df_Focal, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
#  ggtitle(titulo) +
theme_bw()
g2
k = regs[2]
df1 <- getFreq_based_on_FRASim(df, k)
d1 <- plot_RSTransitions_FRA(df1, k)
df_Focal <- df1[df1$Region == 'RS', ]
regs_go <- regiones[which(regiones != k)]
regs_go <- regs_go[2:8]
for (j in regs_go) {
df_Focal <- df_Focal[df_Focal$RegionGo != j, ]
}
rotulo_x <- paste("FRASim", k, sep="")
titulo <- paste("Staying at", k)
color_a_usar <- cbPalette[which(regiones == k)]
g2 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs),
df_Focal, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
#  ggtitle(titulo) +
theme_bw()
df_Focal
df_Focal$RegionGo
g2 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, group=RegionGO, color=RegionGo),
df_Focal, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
#  ggtitle(titulo) +
theme_bw()
g2
df_Focal
g2 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, colour=RegionGo, group=RegionGo),
df_Focal, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
#  ggtitle(titulo) +
theme_bw()
g2
g2 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, shape=RegionGo, group=RegionGo),
df_Focal, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
#  ggtitle(titulo) +
theme_bw()
g2
g2 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, shape=RegionGo, color=RegionGo, group=RegionGo),
df_Focal, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
#  ggtitle(titulo) +
theme_bw()
g2
g2 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, shape=RegionGo, color=RegionGo, group=RegionGo),
df_Focal, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
scale_color_manual(values = cbPalette)
g2 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, shape=RegionGo, color=RegionGo, group=RegionGo),
df_Focal, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
scale_color_manual(values = cbPalette) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
#  ggtitle(titulo) +
theme_bw()
g2
df1 <- getFreq_based_on_FRASim(df, k)
df_Focal <- df1[df1$Region == 'RS', ]
regs_go <- regiones[which(regiones != k)]
#regs_go <- regs_go[2:8]
for (j in regs_go) {
df_Focal <- df_Focal[df_Focal$RegionGo != j, ]
}
g2 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, shape=RegionGo, color=RegionGo, group=RegionGo),
df_Focal, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
scale_color_manual(values = cbPalette) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
#  ggtitle(titulo) +
theme_bw()
g2
g2 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, shape=RegionGo, color=RegionGo, group=RegionGo),
df_Focal, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
scale_color_manual(labels=regiones, values = cbPalette) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
#  ggtitle(titulo) +
theme_bw()
g2
g2 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, shape=RegionGo, color=RegionGo, group=RegionGo),
df_Focal, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
scale_color_manual(values = cbPalette, aesthetics=regiones) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
#  ggtitle(titulo) +
theme_bw()
g2
df_Focal$RegionGo <- factor(df_Focal$RegionGo, levels=regiones)
df_Focal$RegionGo
g2 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, shape=RegionGo, color=RegionGo, group=RegionGo),
df_Focal, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
scale_color_manual(values = cbPalette) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
#  ggtitle(titulo) +
theme_bw()
g2
g2 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, shape=RegionGo, color=RegionGo, group=RegionGo),
df_Focal, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
scale_color_manual(breaks=regiones, values = cbPalette) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
#  ggtitle(titulo) +
theme_bw()
g2
df1 <- getFreq_based_on_FRASim(df, k)
# Plot RS to RS
df_Focal <- df1[df1$Region == 'RS', ]
df_Focal <- df_Focal[df_Focal$RegionGo == 'RS', ]
g1 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, shape=RegionGo, color=RegionGo, group=RegionGo),
df_Focal, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
scale_color_manual(breaks=regiones, values = cbPalette) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
ggtitle(titulo) +
theme_bw()
g2
g1 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, shape=RegionGo, color=RegionGo, group=RegionGo),
df_Focal, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
scale_color_manual(breaks=regiones, values = cbPalette) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
ggtitle(titulo) +
theme_bw()
g1
g1 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, shape=RegionGo, color=RegionGo, group=RegionGo),
df_Focal, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
#  scale_color_manual(breaks=regiones, values = cbPalette) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
ggtitle(titulo) +
theme_bw()
g1
color_a_usar <- cbPalette[which(regiones == 'RS')]
g1 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, shape=RegionGo, color=RegionGo, group=RegionGo),
df_Focal, color = color_a_usar, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
#  scale_color_manual(breaks=regiones, values = cbPalette) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
ggtitle(titulo) +
theme_bw()
g1
# Plot RS to RS
df_Focal <- df1[df1$Region == 'RS', ]
df_Focal <- df_Focal[df_Focal$RegionGo == k, ]
color_a_usar <- cbPalette[which(regiones == k)]
g2 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, shape=RegionGo, color=RegionGo, group=RegionGo),
df_Focal, color = color_a_usar, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
ggtitle(titulo) +
theme_bw()
g2
p <- grid.arrange(g1, g2, nrow = 1)
# Plot RS to RS
df_Focal <- df1[df1$Region == 'RS', ]
df_Focal <- df_Focal[df_Focal$RegionGo == 'RS', ]
color_a_usar <- cbPalette[which(regiones == 'RS')]
g1 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, shape=RegionGo, color=RegionGo, group=RegionGo),
df_Focal, color = color_a_usar, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
ggtitle(titulo) +
theme_bw()
g1
g1 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, shape=RegionGo, color=RegionGo, group=RegionGo),
df_Focal, color = color_a_usar, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
labs() +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
ggtitle(titulo) +
theme_bw()
g1
# Plot RS to RS
df_Focal <- df1[df1$Region == 'RS', ]
color_a_usar <- cbPalette[which(regiones == 'RS')]
df_Focal <- df_Focal[df_Focal$RegionGo == 'RS', ]
g1 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, shape=RegionGo, color=RegionGo, group=RegionGo),
df_Focal, color = color_a_usar, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
ggtitle(titulo) +
theme(legend.position="none") +
theme_bw()
g1
# Plot RS to RS
df_Focal <- df1[df1$Region == 'RS', ]
color_a_usar <- cbPalette[which(regiones == k)]
df_Focal <- df_Focal[df_Focal$RegionGo == k, ]
g2 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, shape=RegionGo, color=RegionGo, group=RegionGo),
df_Focal, color = color_a_usar, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
ggtitle(titulo) +
theme(legend.position="none") +
theme_bw()
g2
# Plot RS to k
titulo <- paste("Transition from RS to", k)
df_Focal <- df1[df1$Region == 'RS', ]
df_Focal <- df_Focal[df_Focal$RegionGo == k, ]
color_a_usar <- cbPalette[which(regiones == k)]
g2 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, shape=RegionGo, color=RegionGo, group=RegionGo),
df_Focal, color = color_a_usar, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
ggtitle(titulo) +
theme(legend.position="none") +
theme_bw()
g2
g2 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, shape=RegionGo, color=RegionGo, group=RegionGo),
df_Focal, color = color_a_usar, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
ggtitle(titulo) +
theme(legend.position="none") +
theme_bw()
g2
g2 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, shape=RegionGo, color=RegionGo, group=RegionGo),
df_Focal, color = color_a_usar, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
ggtitle(titulo) +
theme_bw() +
theme(legend.position="none")
g2
p <- grid.arrange(g1, g2, nrow = 1)
df1 <- getFreq_based_on_FRASim(df, k)
# Plot RS to RS
df_Focal <- df1[df1$Region == 'RS', ]
df_Focal <- df_Focal[df_Focal$RegionGo == 'RS', ]
color_a_usar <- cbPalette[which(regiones == 'RS')]
g1 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, shape=RegionGo, color=RegionGo, group=RegionGo),
df_Focal, color = color_a_usar, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
ggtitle("Staying at RS") +
theme_bw() +
theme(legend.position="none")
g1
# Plot RS to k
titulo <- paste("Transition from RS to", k)
df_Focal <- df1[df1$Region == 'RS', ]
df_Focal <- df_Focal[df_Focal$RegionGo == k, ]
color_a_usar <- cbPalette[which(regiones == k)]
g2 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs, shape=RegionGo, color=RegionGo, group=RegionGo),
df_Focal, color = color_a_usar, alpha = alpha, size=1.5) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
ggtitle(titulo) +
theme_bw() +
theme(legend.position="none")
g2
p <- grid.arrange(g1, g2, nrow = 1)
p <- plot_Transitions_FRASim(k)
source("Model_Plots.R")
p <- plot_Transitions_FRASim(k)
p <- plot_Transitions_FRASim(df, k)
k = regs[1]
p <- plot_Transitions_FRASim(df, k)
k = regs[2]
p <- plot_Transitions_FRASim(df, k)
