# Plot RS to k
df_Focal <- args[args$Region == 'RS', ]
df_Focal <- df_Focal[, c(5,num_k + 4)]
df_Focal
#unlist(df_Focal[1, 1])[num_k]
df_Focal$y <- lapply(df_Focal$freqs, function(x) return(unlist(x)[num_k]))
df_Focal$Freqs <- unlist(df_Focal$y)
df_Focal <- df_Focal[, c(2,4)]
names(df_Focal) <- c('FRASim', 'Freqs')
df_Focal
g2 <- ggplot() +
geom_point(aes(x = FRASim, y = Freqs),#, shape=RegionGo, color=RegionGo, group=RegionGo),
data = df_Focal,
color = color_a_usar,
alpha = alpha,
size=3,
shape = 4) +
scale_x_continuous(limits = c(min_score, max_score)) +
scale_y_continuous(limits = c(0, 1.01)) +
xlab(rotulo_x) +
ylab("Rel. Freq./Probability") +
ggtitle(titulo) +
theme_bw() +
theme(legend.position="none")
g2
plot_Transitions_FRASim_k(args, 'UP')
df$Region <- df$Category
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
print(head(df))
df$Region <- df$Category
df <- find_joint_region(df)
archivo <- "../Data/humans_only_absent.csv"
print(paste("Loading and preparing data", archivo, "..."))
df = read.csv(archivo)
df$Region <- df$Category
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
print(head(df))
args <- getFreqFRA(df, theta)
args <- get_FRASims(args)
head(args)
plot_Transitions_FRASim_k(args, 'UP')
source('MODELpred.R')
source("Model_Plots.R")
plot_Transitions_FRASim_k(args, 'UP')
plot_Transitions_FRASim_k(args, 'DOWN')
plot_Transitions_FRASim_k(args, 'LEFT')
plot_Transitions_FRASim_k(args, 'RIGHT')
source('MODELpred.R')
source("Model_Plots.R")
plot_Transitions_FRASim_k(args, 'TOP')
plot_Transitions_FRASim_k(args, 'BOTTOM')
plot_Transitions_FRASim_k(args, 'RIGHT')
for (r in regiones) {
k <- int(r / 2)
print(k)
#q <- plot_Transitions_FRASim_k(args, k)
#p <- grid.arrange(q, p)
}
for (r in regiones) {
k <- integer(r / 2)
print(k)
#q <- plot_Transitions_FRASim_k(args, k)
#p <- grid.arrange(q, p)
}
for (r in regiones) {
k <- integer(which(regiones == r) / 2)
print(k)
#q <- plot_Transitions_FRASim_k(args, k)
#p <- grid.arrange(q, p)
}
for (r in regiones) {
k <- which(regiones == r)
print(k)
#q <- plot_Transitions_FRASim_k(args, k)
#p <- grid.arrange(q, p)
}
k <- integer(which(regiones == r))
for (r in regiones) {
k <- integer(which(regiones == r))
print(k)
#q <- plot_Transitions_FRASim_k(args, k)
#p <- grid.arrange(q, p)
}
for (r in regiones) {
k <- which(regiones == r)
print(k)
#q <- plot_Transitions_FRASim_k(args, k)
#p <- grid.arrange(q, p)
}
for (r in regiones) {
k <- which(regiones == r)[1]
print(k)
#q <- plot_Transitions_FRASim_k(args, k)
#p <- grid.arrange(q, p)
}
for (r in regiones) {
k <- mean(which(regiones == r))
print(k)
#q <- plot_Transitions_FRASim_k(args, k)
#p <- grid.arrange(q, p)
}
for (r in regiones) {
k <- mean(which(regiones == r))
print(k/2)
#q <- plot_Transitions_FRASim_k(args, k)
#p <- grid.arrange(q, p)
}
seq(1,10,2)
for (r in seq(1,8,2)) {
print(r)
#q <- plot_Transitions_FRASim_k(args, k)
#p <- grid.arrange(q, p)
}
pl <- ggplot()
for (r in seq(1,8,2)) {
print(r)
k <- regiones[r]
q <- plot_Transitions_FRASim_k(args, k)
k <- regiones[r+1]
p <- plot_Transitions_FRASim_k(args, k)
p <- grid.arrange(q, p)
pl <- grid.arrange(pl, p)
}
p
pl <- ggplot()
for (r in seq(1,8,2)) {
print(r)
k <- regiones[r]
q <- plot_Transitions_FRASim_k(args, k)
k <- regiones[r+1]
p <- plot_Transitions_FRASim_k(args, k)
p <- grid.arrange(q, p)
p
#pl <- grid.arrange(pl, p)
}
pl <- ggplot()
for (r in seq(2,9,2)) {
print(r)
k <- regiones[r]
q <- plot_Transitions_FRASim_k(args, k)
k <- regiones[r+1]
p <- plot_Transitions_FRASim_k(args, k)
p <- grid.arrange(q, p)
p
#pl <- grid.arrange(pl, p)
}
for (r in seq(2,9,2)) {
print(r)
k <- regiones[r]
q <- plot_Transitions_FRASim_k(args, k)
k <- regiones[r+1]
p <- plot_Transitions_FRASim_k(args, k)
p <- grid.arrange(q, p, nrow=1)
p
pl <- grid.arrange(pl, p, nrow=2)
}
pl
pl <- ggplot()
for (r in seq(2,9,2)) {
print(r)
k <- regiones[r]
q <- plot_Transitions_FRASim_k(args, k)
k <- regiones[r+1]
p <- plot_Transitions_FRASim_k(args, k)
p <- grid.arrange(q, p, nrow=1)
pl <- grid.arrange(pl, p, nrow=2)
}
pA <- plot_Transitions_FRASim_k(args, 'ALL')
pN <- plot_Transitions_FRASim_k(args, 'NOTHING')
pT <- plot_Transitions_FRASim_k(args, 'TOP')
pB <- plot_Transitions_FRASim_k(args, 'BOTTOM')
pL <- plot_Transitions_FRASim_k(args, 'LEFT')
pR <- plot_Transitions_FRASim_k(args, 'RIGHT')
pI <- plot_Transitions_FRASim_k(args, 'IN')
pO <- plot_Transitions_FRASim_k(args, 'OUT')
grid.arrange(pA, pN,
pT, pB,
pL, pR,
pI, pO,
nrows=4)
pA <- plot_Transitions_FRASim_k(args, 'ALL')
pN <- plot_Transitions_FRASim_k(args, 'NOTHING')
pT <- plot_Transitions_FRASim_k(args, 'TOP')
pB <- plot_Transitions_FRASim_k(args, 'BOTTOM')
pL <- plot_Transitions_FRASim_k(args, 'LEFT')
pR <- plot_Transitions_FRASim_k(args, 'RIGHT')
pI <- plot_Transitions_FRASim_k(args, 'IN')
pO <- plot_Transitions_FRASim_k(args, 'OUT')
grid.arrange(pA, pN,
pT, pB,
pL, pR,
pI, pO,
nrows=4)
pA
pN
pT
pB
pL
pR
pI
pO
grid.arrange(pA, pN,
pT, pB,
pL, pR,
pI, pO,
nrows=4)
grid.arrange(pA, pN)#,
grid.arrange(pA, pN,
pT, pB)#,
grid.arrange(pA, pN,
pT, pB,
pL, pR)#,
grid.arrange(pA, pN,
pT, pB,
pL, pR,
pI, pO)#,
grid.arrange(pA, pN,
pT, pB,
pL, pR,
pI, pO,
nrows=4, ncols=2)
grid.arrange(pA, pN,
pT, pB,
pL, pR,
pI, pO,
ncols=2)
grid.arrange(pA, pN,
pT, pB,
pL, pR,
pI, pO)
archivo <- "../Data/humans_only_absent.csv"
print(paste("Loading and preparing data", archivo, "..."))
df1 = read.csv(archivo)
df1$Region <- df1$Category
df1$Exp <- as.character("Humans")
archivo <- "../Data/FittedMBiases.csv"
print(paste("Loading and preparing data", archivo, "..."))
df2 = read.csv(archivo)
df2$Region <- df2$Category
df2$Exp <- as.character("MBiases")
archivo <- "../Data/FittedWSLS.csv"
print(paste("Loading and preparing data", archivo, "..."))
df3 = read.csv(archivo)
df3$Region <- df3$Category
df3$Exp <- as.character("WSLS")
archivo <- "../Data/FittedFRA.csv"
print(paste("Loading and preparing data", archivo, "..."))
df4 = read.csv(archivo)
df4$Region <- df4$Category
df4$Exp <- as.character("FRA")
q <- plot_behavioral_data_fit(df1, df2, df3, df4)
df1 <- getRelFreq_Rows(df)
d2 <- plot_FocalTransitions(df1)
d2 <- plot_ModelTransitions_Focal(thetaWS, d2, "#E69F00")
d2 <- plot_ModelTransitions_Focal(thetaFR, d2, "#56B4E9")
d2
archivo <- "../Data/humans_only_absent.csv"
print(paste("Loading and preparing data", archivo, "..."))
df = read.csv(archivo)
df1 <- getRelFreq_Rows(df)
d2 <- plot_FocalTransitions(df1)
d2 <- plot_ModelTransitions_Focal(thetaWS, d2, "#E69F00")
d2 <- plot_ModelTransitions_Focal(thetaFR, d2, "#56B4E9")
d2
d2 <- plot_ModelTransitions_Focal(thetaWS, d2, cbPalette[5])
d2
d2 <- plot_FocalTransitions(df1)
d2 <- plot_ModelTransitions_Focal(thetaWS, d2, cbPalette[5])
d2
d2 <- plot_ModelTransitions_Focal(thetaFR, d2, cbPalette[7])
d2
grid.arrange(d2, pA, pN,
pT, pB,
pL, pR,
pI, pO,nrows=)
pA <- plot_Transitions_FRASim_k(args, 'ALL')
pN <- plot_Transitions_FRASim_k(args, 'NOTHING')
pT <- plot_Transitions_FRASim_k(args, 'TOP')
pB <- plot_Transitions_FRASim_k(args, 'BOTTOM')
pL <- plot_Transitions_FRASim_k(args, 'LEFT')
pR <- plot_Transitions_FRASim_k(args, 'RIGHT')
pI <- plot_Transitions_FRASim_k(args, 'IN')
pO <- plot_Transitions_FRASim_k(args, 'OUT')
grid.arrange(d2, pA, pN,
pT, pB,
pL, pR,
pI, pO,nrows=)
grid.arrange(pA, pN,
pT, pB,
pL, pR,
pI, pO,nrows=)
####################################################
# Loading parameters from estimations...
####################################################
archivo <- "../Data/parameter_fit_humans.csv"
print(paste("Loading and preparing data", archivo, "..."))
parametros = read.csv(archivo)
thetaWS <- unlist(parametros[parametros['Model']=='WSLS', ][2:11])
imprimir(thetaWS)
thetaFR <- unlist(parametros[parametros['Model']=='FRA', ][2:11])
imprimir(thetaFR)
archivo <- "../Data/humans_only_absent.csv"
print(paste("Loading and preparing data", archivo, "..."))
df = read.csv(archivo)
df1 <- getRelFreq_Rows(df)
d2 <- plot_FocalTransitions(df1)
d2 <- plot_ModelTransitions_Focal(thetaWS, d2, cbPalette[5])
d2 <- plot_ModelTransitions_Focal(thetaFR, d2, cbPalette[7])
d2
df$Region <- df$Category
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
print(head(df))
args <- getFreqFRA(df, theta)
args <- get_FRASims(args)
head(args)
pA <- plot_Transitions_FRASim_k(args, 'ALL')
head(args)
pA <- plot_Transitions_FRASim_k(args, 'ALL')
df$Region <- df$Category
df <- find_joint_region(df)
df = read.csv(archivo)
df$Region <- df$Category
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
print(head(df))
args <- getFreqFRA(df, theta)
args <- get_FRASims(args)
source('MODELpred.R')
source("Model_Plots.R")
####################################################
# Loading parameters from estimations...
####################################################
archivo <- "../Data/parameter_fit_humans.csv"
print(paste("Loading and preparing data", archivo, "..."))
parametros = read.csv(archivo)
thetaWS <- unlist(parametros[parametros['Model']=='WSLS', ][2:11])
imprimir(thetaWS)
thetaFR <- unlist(parametros[parametros['Model']=='FRA', ][2:11])
imprimir(thetaFR)
archivo <- "../Data/humans_only_absent.csv"
print(paste("Loading and preparing data", archivo, "..."))
df = read.csv(archivo)
df1 <- getRelFreq_Rows(df)
d2 <- plot_FocalTransitions(df1)
d2 <- plot_ModelTransitions_Focal(thetaWS, d2, cbPalette[5])
d2 <- plot_ModelTransitions_Focal(thetaFR, d2, cbPalette[7])
d2
df$Region <- df$Category
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
print(head(df))
args <- getFreqFRA(df, theta)
args <- get_FRASims(args)
source("Model_Plots.R")
source('MODELpred.R')
####################################################
# Loading parameters from estimations...
####################################################
archivo <- "../Data/parameter_fit_humans.csv"
print(paste("Loading and preparing data", archivo, "..."))
parametros = read.csv(archivo)
thetaWS <- unlist(parametros[parametros['Model']=='WSLS', ][2:11])
imprimir(thetaWS)
thetaFR <- unlist(parametros[parametros['Model']=='FRA', ][2:11])
imprimir(thetaFR)
archivo <- "../Data/humans_only_absent.csv"
print(paste("Loading and preparing data", archivo, "..."))
df = read.csv(archivo)
df1 <- getRelFreq_Rows(df)
d2 <- plot_FocalTransitions(df1)
d2 <- plot_ModelTransitions_Focal(thetaWS, d2, cbPalette[5])
d2 <- plot_ModelTransitions_Focal(thetaFR, d2, cbPalette[7])
d2
df$Region <- df$Category
df <- find_joint_region(df)
df$RegionFULL <- unlist(df$RegionFULL)
df$RegionGo <- factor(df$RegionGo, levels = regiones)
print(head(df))
args <- getFreqFRA(df, theta)
args <- get_FRASims(args)
head(args)
pA <- plot_Transitions_FRASim_k(args, 'ALL')
pN <- plot_Transitions_FRASim_k(args, 'NOTHING')
pT <- plot_Transitions_FRASim_k(args, 'TOP')
pB <- plot_Transitions_FRASim_k(args, 'BOTTOM')
pL <- plot_Transitions_FRASim_k(args, 'LEFT')
pR <- plot_Transitions_FRASim_k(args, 'RIGHT')
pI <- plot_Transitions_FRASim_k(args, 'IN')
pO <- plot_Transitions_FRASim_k(args, 'OUT')
grid.arrange(pA, pN,
pT, pB,
pL, pR,
pI, pO,nrows=)
pA
pN
grid.arrange(pA, pN,
pT, pB,
pL, pR,
pI, pO,ncols=2)
grid.arrange(pA, pN,
pT, pB,
pL, pR,
pI, pO)
grid.arrange(d2, pA, pN,
pT, pB,
pL, pR,
pI, pO)
pA <- plot_Transitions_FRASim_k(args, 'ALL')
pA <- plot_ModelTransition_k_FRA(args, thetaFR, 'ALL')
pA
pA <- plot_Transitions_FRASim_k(args, 'ALL')
pA <- plot_ModelTransition_k_FRA(args, thetaFR, 'ALL')
pN <- plot_Transitions_FRASim_k(args, 'NOTHING')
pA <- plot_ModelTransition_k_FRA(args, thetaFR, 'NOTHING')
pT <- plot_Transitions_FRASim_k(args, 'TOP')
pA <- plot_ModelTransition_k_FRA(args, thetaFR, 'TOP')
pB <- plot_Transitions_FRASim_k(args, 'BOTTOM')
pA <- plot_ModelTransition_k_FRA(args, thetaFR, 'BOTTOM')
pL <- plot_Transitions_FRASim_k(args, 'LEFT')
pA <- plot_ModelTransition_k_FRA(args, thetaFR, 'LEFT')
pR <- plot_Transitions_FRASim_k(args, 'RIGHT')
pA <- plot_ModelTransition_k_FRA(args, thetaFR, 'RIGHT')
pI <- plot_Transitions_FRASim_k(args, 'IN')
pA <- plot_ModelTransition_k_FRA(args, thetaFR, 'IN')
pO <- plot_Transitions_FRASim_k(args, 'OUT')
pA <- plot_ModelTransition_k_FRA(args, thetaFR, 'OUT')
grid.arrange(d2, pA, pN,
pT, pB,
pL, pR,
pI, pO)
P <- grid.arrange(d2, pA, pN,
pT, pB,
pL, pR,
pI, pO)
P
pA <- plot_Transitions_FRASim_k(args, 'ALL')
pA <- plot_ModelTransition_k_FRA(args, thetaFR, 'ALL')
pN <- plot_Transitions_FRASim_k(args, 'NOTHING')
pN <- plot_ModelTransition_k_FRA(args, thetaFR, 'NOTHING')
pT <- plot_Transitions_FRASim_k(args, 'TOP')
pT <- plot_ModelTransition_k_FRA(args, thetaFR, 'TOP')
pB <- plot_Transitions_FRASim_k(args, 'BOTTOM')
pB <- plot_ModelTransition_k_FRA(args, thetaFR, 'BOTTOM')
pL <- plot_Transitions_FRASim_k(args, 'LEFT')
pL <- plot_ModelTransition_k_FRA(args, thetaFR, 'LEFT')
pR <- plot_Transitions_FRASim_k(args, 'RIGHT')
pR <- plot_ModelTransition_k_FRA(args, thetaFR, 'RIGHT')
pI <- plot_Transitions_FRASim_k(args, 'IN')
pI <- plot_ModelTransition_k_FRA(args, thetaFR, 'IN')
pO <- plot_Transitions_FRASim_k(args, 'OUT')
pO <- plot_ModelTransition_k_FRA(args, thetaFR, 'OUT')
P <- grid.arrange(d2, pA, pN,
pT, pB,
pL, pR,
pI, pO)
P
P
P <- grid.arrange(d2, pA, pN,
pT, pB,
pL, pR,
pI, pO)
P
archivo <- "../Data/humans_only_absent.csv"
print(paste("Loading and preparing data", archivo, "..."))
df1 = read.csv(archivo)
df1$Region <- df1$Category
df1$Exp <- as.character("Humans")
archivo <- "../Data/FittedMBiases.csv"
print(paste("Loading and preparing data", archivo, "..."))
df2 = read.csv(archivo)
df2$Region <- df2$Category
df2$Exp <- as.character("MBiases")
archivo <- "../Data/FittedWSLS.csv"
print(paste("Loading and preparing data", archivo, "..."))
df3 = read.csv(archivo)
df3$Region <- df3$Category
df3$Exp <- as.character("WSLS")
archivo <- "../Data/FittedFRA.csv"
print(paste("Loading and preparing data", archivo, "..."))
df4 = read.csv(archivo)
df4$Region <- df4$Category
df4$Exp <- as.character("FRA")
q <- plot_behavioral_data_fit(df1, df2, df3, df4)
archivo <- "../Data/humans_only_absent.csv"
print(paste("Loading and preparing data", archivo, "..."))
df1 = read.csv(archivo)
df1$Region <- df1$Category
df1$Exp <- as.character("Humans")
archivo <- "../Data/FittedMBiases.csv"
print(paste("Loading and preparing data", archivo, "..."))
df2 = read.csv(archivo)
df2$Region <- df2$Category
df2$Exp <- as.character("MBiases")
archivo <- "../Data/FittedWSLS.csv"
print(paste("Loading and preparing data", archivo, "..."))
df3 = read.csv(archivo)
df3$Region <- df3$Category
df3$Exp <- as.character("WSLS")
archivo <- "../Data/FittedFRA.csv"
print(paste("Loading and preparing data", archivo, "..."))
df4 = read.csv(archivo)
df4$Region <- df4$Category
df4$Exp <- as.character("FRA")
q <- plot_behavioral_data_fit(df1, df2, df3, df4)
